<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>本地构建数据加速 GBF 翻译</title>
    <link href="undefinedlocal-GBF-translation-data.html"/>
    <url>local-GBF-translation-data.html</url>
    
    <content type="html"><![CDATA[<p>一直在用同事的 <a href="https://github.com/BLHXFY-Group/BLHXFY" target="_blank" rel="noopener">GBF 翻译项目</a>，但是因为项目是托管在 GitHub 上，卡起来还是很影响使用体验的。</p><p>不过 GBF 翻译提供自定义数据源功能，基于此可以本地构建 GBF 翻译数据，加快 GBF 相应速度，提高游戏体验。</p><a id="more"></a><font color="#DC143C">请注意，GBF 翻译使用与否取决于个人意愿，可能存在的风险均由使用者个人承担，这里不作推荐。</font> <p>但如果确定使用，希望在使用体验上有更进一步的提高，可以继续往下看。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>打开 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a> 下载 Windows 版安装程序，打开安装程序按着引导安装即可。</p><h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><p>使用 Homebrew 安装 Git。</p><pre><code class="bash">brew install git</code></pre><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>使用包管理工具安装 Git，这里笔者使用的是 Ubuntu 的包管理工具安装。</p><pre><code>apt install git</code></pre><h2 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h2><h3 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h3><p>打开 <a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">http://nginx.org/en/download.html</a> 下载 Windows 版程序，打开后解压到合适位置。</p><h3 id="macOS-1"><a href="#macOS-1" class="headerlink" title="macOS"></a>macOS</h3><p>使用 Homebrew 安装 Nginx。</p><pre><code class="bash">brew install nginx</code></pre><h3 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h3><p>使用包管理工具安装 Nginx，或自行下载编译安装，这里笔者使用的是 Ubuntu 的包管理工具。</p><pre><code class="bash">apt install nginx</code></pre><h1 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h1><h2 id="下载-GBF-翻译数据到本地"><a href="#下载-GBF-翻译数据到本地" class="headerlink" title="下载 GBF 翻译数据到本地"></a>下载 GBF 翻译数据到本地</h2><p>Windows 可以在合适的位置打开 Git Bash，或者直接打开 CMD，因为 Git 在安装过程中自动添加了 PATH，macOS 和 Linux 则在合适的位置打开 Terminal。</p><p>输入 </p><p><code>git clone -b gh-pages https://github.com/biuuu/BLHXFY.git</code></p><p>下载数据源。</p><h2 id="启动-Nginx"><a href="#启动-Nginx" class="headerlink" title="启动 Nginx"></a>启动 Nginx</h2><h3 id="Windows-2"><a href="#Windows-2" class="headerlink" title="Windows"></a>Windows</h3><p>打开 Nginx 目录下 <code>conf</code> 文件夹下的 <code>nginx.conf</code> 文件，在 <code>http</code> 段内新加一个 <code>server</code> 段，填入如下配置：</p><pre><code class="nginx">server {        listen 4567;        server_name 127.0.0.1;        location / {                root D:\BLHXFY;                access_log off;                expires    1d;                add_header Access-Control-Allow-Origin *;                add_header Access-Control-Allow-Methods &#39;GET, POST, OPTIONS&#39;;                add_header Access-Control-Allow-Headers &#39;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization&#39;;                if ($request_method = &#39;OPTIONS&#39;) {                        return 204;                }        }}</code></pre><p><code>root</code> 后路径为你 Git 下载下来的 GBF 翻译数据所在路径。</p><p>保存关闭后运行 <code>nginx.exe</code> 启动。</p><h3 id="macOS-2"><a href="#macOS-2" class="headerlink" title="macOS"></a>macOS</h3><p>打开配置文件 <code>vim /usr/local/etc/nginx/nginx.conf</code>，在 <code>http</code> 段内新加一个 <code>server</code> 段，填入如下配置：</p><pre><code class="nginx">server {        listen 4567;        server_name 127.0.0.1;        location / {                root /Users/Neko7ina/BLHXFY/;                access_log off;                expires    1d;                add_header Access-Control-Allow-Origin *;                add_header Access-Control-Allow-Methods &#39;GET, POST, OPTIONS&#39;;                add_header Access-Control-Allow-Headers &#39;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization&#39;;                if ($request_method = &#39;OPTIONS&#39;) {                        return 204;                }        }}</code></pre><p><code>root</code> 后路径为你 Git 下载下来的 GBF 翻译数据所在路径。</p><p>保存退出，启动 Nginx：</p><pre><code class="bash">nginx -tnginx</code></pre><h3 id="Linux-2"><a href="#Linux-2" class="headerlink" title="Linux"></a>Linux</h3><p>新建一个配置文件并加入下述配置内容：</p><pre><code class="bash">vim /etc/nginx/conf.d/blhxfy.conf</code></pre><pre><code class="nginx">server {        listen 4567;        server_name 127.0.0.1;        location / {                root /srv/BLHXFY;                access_log off;                expires    1d;                add_header Access-Control-Allow-Origin *;                add_header Access-Control-Allow-Methods &#39;GET, POST, OPTIONS&#39;;                add_header Access-Control-Allow-Headers &#39;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization&#39;;                if ($request_method = &#39;OPTIONS&#39;) {                        return 204;                }        }}</code></pre><p><code>root</code> 后路径为你 Git 下载下来的 GBF 翻译数据所在路径。</p><p>保存退出，启动 Nginx：</p><pre><code class="bash">nginx -tnginx</code></pre><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>首先确定已经安装 GBF 翻译，在安装油猴的情况下打开 <a href="https://blhx.danmu9.com/blhxfy/extension.user.js" target="_blank" rel="noopener">https://blhx.danmu9.com/blhxfy/extension.user.js</a> 即可完成安装。</p><p>安装完之后，打开设置界面，会发现多了一个 <code>汉化插件设置</code>，点击打开。</p><p><img src="https://pic.neko7ina.com:7777/images/20190930/1.png" srcset="/img/loading.gif" width="37%"></p><p>在第一项数据源中填入 <code>http://127.0.0.1:4567</code>，然后滚到到下方点击返回设置。</p><p><img src="https://pic.neko7ina.com:7777/images/20190930/2.png" srcset="/img/loading.gif" width="37%"></p><p>现在 GBF 翻译使用的就是本地数据源了，加载速度飞快。</p><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>更新就很容易了，切换到 GBF 翻译数据所在路径，执行 <code>git pull</code> 即可更新。</p><p>如果碰到如下问题：</p><p><code>fatal: refusing to merge unrelated histories</code></p><p>只要重设一下再更新即可：</p><pre><code class="bash">git reset --hard origin/gh-pagesgit pull</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>折腾</tag>
      
      <tag>Nginx</tag>
      
      <tag>GBF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用反向代理加速 GBF</title>
    <link href="undefinedproxy_pass-for-gbf.html"/>
    <url>proxy_pass-for-gbf.html</url>
    
    <content type="html"><![CDATA[<p>GBF 直连还不错的时候不多，其他时候就需要点辅助手段来更顺畅地玩游戏。</p><p>以前一直都是用浏览器分配指定域名走代理，后来在 NGA 上看到反代这个思路，尝试了一下发现效果不错，就这么用了下来。</p><p>想要使用这个方法，<font color="#DC143C">需要有一台自己的海外的 VPS，并且国内直连过去的效果还不错。</font></p><a id="more"></a><blockquote><p>图片 Pixiv ID = 69939714</p></blockquote><h1 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h1><p>这里我用了 Nginx，其他如 Caddy 之类的按照各自规则修改即可。</p><p>首先在 VPS 上安装 Nginx，各大发行版的包管理均有，安装完毕后下载配置文件到 Nginx 的配置路径下，一般为 <code>/etc/nginx/conf.d</code>。</p><pre><code class="bash">cd /etc/nginx/conf.dwget https://raw.githubusercontent.com/huaxianyan/gbf-nginx-proxy_pass/master/gbf.confnginx -tnginx -s reload</code></pre><p>如 Nginx 为编译安装，可以在目录下新建 <code>conf.d</code> 文件夹，修改 <code>nginx.conf</code> 将路径 include 进去，再将配置文件放到该位置，重启 Nginx。</p><p>这样不出意外，服务端就启动完成了。</p><h1 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h1><h2 id="Windows-amp-Linux-amp-macOS"><a href="#Windows-amp-Linux-amp-macOS" class="headerlink" title="Windows &amp; Linux &amp; macOS"></a>Windows &amp; Linux &amp; macOS</h2><p>下载安装 <a href="https://github.com/oldj/SwitchHosts#switchhosts" target="_blank" rel="noopener">SwitchHosts!</a>，Windows 下需要用管理员权限运行。</p><p>新建一条规则，将 GBF 相关域名的地址指向 VPS IP，像下面这样。</p><pre><code class="hosts">1.2.3.4 game.granbluefantasy.jp1.2.3.4 game-a.granbluefantasy.jp1.2.3.4 game-a1.granbluefantasy.jp1.2.3.4 game-a2.granbluefantasy.jp1.2.3.4 game-a3.granbluefantasy.jp1.2.3.4 game-a4.granbluefantasy.jp1.2.3.4 game-a5.granbluefantasy.jp1.2.3.4 gbf.game.mbga.jp1.2.3.4 gbf.game-a.mbga.jp1.2.3.4 gbf.game-a1.mbga.jp1.2.3.4 gbf.game-a2.mbga.jp1.2.3.4 gbf.game-a3.mbga.jp1.2.3.4 gbf.game-a4.mbga.jp1.2.3.4 gbf.game-a5.mbga.jp</code></pre><p><code>1.2.3.4</code> 处为 VPS IP。</p><p>现在应该可以使用远程 VPS 来反代加速 GBF 加载了。</p><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><p>使用 <a href="https://github.com/Lerist/Go-Hosts" target="_blank" rel="noopener">Go Hosts</a> 来实现修改，事先建立一个文件，规则类似上述，然后打开 Go Hosts 加载本地文件即可。</p><h2 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h2><p><a href="https://apps.apple.com/us/app/shadowrocket/id932747118" target="_blank" rel="noopener">Shadowrocket</a> 支持 hosts，直接添加规则即可，规则类似上述。</p><h1 id="其他心得"><a href="#其他心得" class="headerlink" title="其他心得"></a>其他心得</h1><p>之前尝试过用 Nginx 在本地缓存，但是会造成偶尔发生 504，最后决定在服务端不做缓存，让浏览器自然缓存，使用体验基本没什么影响。</p><p>如果决定做缓存，定期重载 Nginx 好像有利于反代效果，可以自行加进 crontab。</p>]]></content>
    
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>折腾</tag>
      
      <tag>Nginx</tag>
      
      <tag>GBF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FF7R 战斗系统简单剖析</title>
    <link href="undefinedff7r-battle.html"/>
    <url>ff7r-battle.html</url>
    
    <content type="html"><![CDATA[<p>最近值夜班闲着没事把 FF7R 的 E3 演示看了看，担心又出 15 那么个玩意儿的战斗系统。</p><p>仔细分析了一下，结论让我感到有趣。</p><a id="more"></a><p>原版 7 使用的是 ATB，战斗操作方式大致可以分为两个阶段：等待 ATB 满，ATB 满后下指令。</p><p>「ATB 满后下指令」是核心系统，这点做了改进在 7R 里保留了下来，完全改变的是「等待 ATB 满」这个阶段。</p><p>将 ATB 积累从单纯的时间流逝，替换成了一个基本的即时动作战斗框架，积攒 ATB 的手段变成多种基本即时动作操作，比如攻击、防御等，这样给了玩家更多操控性，又不会损伤 7 原本的战斗系统核心。</p><p>这也是 MP 系统依然存在的原因，ATB Charge 只是相当于 ATB 满，释放魔法本就要额外消耗，需要 MP 数值系统制约，不像释放黄色魔石指令。</p><p>ATB 也吸收了一些后作经验，演示中分成 2 段的 ATB Charge 就是来自 13 系列「高速 ATB」变种，将 ATB 切割，指令存在不同消耗，并且不排除游戏流程中有增加 ATB 上限的设计。</p><p>原版「Haste/Slow」可能会不存在，也可能改变成「增加/减少 ATB 增涨幅度」这种效果，毕竟在即时动作战斗框架下直接给人物动作全方位变速反而会影响节奏和手感。</p><p>那么改后的「等待 ATB 满」和「ATB 满后下指令」这两个阶段，不可能完全割裂地简单拼凑在一起，即时动作战斗框架像是一个更大的容器，将原本 ATB 战斗包含在其中，和其进行方方面面的交互、融合，ATB 也要考虑到即时动作战斗的展现形式，指令上会做一些修改及取舍，基于这个战斗框架下的对战设计也有了更大的设计空间，就如同演示中看到的第一个 Boss 多阶段一般。</p><p>换句话说，即时这次 SE 的即时动作战斗又做砸了（我为什么要说又），最大也只会让这个战斗系统沦为时间流逝积累的替代品，给玩家更多主观能动性是怎么也无法抹去的，只要灵魂没有简化过头、服务到没有自我，7R 的战斗系统不会差到令人发指的地步。</p><p>这个战斗系统这样做，既表现一个不错的视觉效果，获得尚佳的互动感受，同时也让一些老内容更佳容易、完整地继承。</p><p>最后要强调的是，并不是说这次 7R 的战斗就一定会做得好，结果如何开发组的设计至关重要，但是情况一定会比 15 那种东西要好的多，能发挥成什么样，只能期待了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>最终幻想</tag>
      
      <tag>FINAL FANTASY</tag>
      
      <tag>FF7R</tag>
      
      <tag>FF7</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>懒人的「图床」打造</title>
    <link href="undefinedabout-my-pictures.html"/>
    <url>about-my-pictures.html</url>
    
    <content type="html"><![CDATA[<p>以前写博客，图都放在新浪上，方便好用。</p><p>但从今年开始，新浪断断续续开始测试防盗链功能，最近几周影响已经十分明显。</p><p>在图片挂掉不少时，我就打定主意要从新浪图床迁移出去。</p><p>从 <a href="https://sm.ms/" target="_blank" rel="noopener">sm.ms</a> 到微软的 OneDrive 都尝试过，结果都不甚理想，最终决定——</p><p>将图放回自己的机器上。</p><a id="more"></a><blockquote><p>图片 Pixiv ID = 35192</p></blockquote><h1 id="确定思路"><a href="#确定思路" class="headerlink" title="确定思路"></a>确定思路</h1><p>网上有很多图床解决方案，但是几乎毫无例外需要用到数据库。</p><p>我的机器配置很低，硬盘空间更是所剩无几，这个方法对我来说用不了，也挺麻烦。</p><p>思考的过程中，我突然意识到，这些图作为 Hexo 的源文件，本身就被我用 Syncthing 同步到各个设备上，包括这台服务器。</p><p>机器上已经有了这些图，那么只要用 Nginx 把链接指过去，就解决了呀。</p><p>大方向确定，再思考完善几个细节，我就开始动手。</p><h1 id="实施"><a href="#实施" class="headerlink" title="实施"></a>实施</h1><h2 id="分配域名"><a href="#分配域名" class="headerlink" title="分配域名"></a>分配域名</h2><p>直接用 IP 不方便管理，最好分配一个二级域名给它，比如我就把 <code>pic.neko7ina.com</code> 指向了机器。</p><h2 id="使用-Syncthing-同步图片"><a href="#使用-Syncthing-同步图片" class="headerlink" title="使用 Syncthing 同步图片"></a>使用 Syncthing 同步图片</h2><p>因为我的图片本来就在 Syncthing 的同步内，这里就不展开，有需要的可以参考 <a href="https://www.neko7ina.com/syncthing.html">这篇</a>。</p><p>将图片传到了服务器上，就可以开始下一步操作。</p><h2 id="初步配置-Nginx"><a href="#初步配置-Nginx" class="headerlink" title="初步配置 Nginx"></a>初步配置 Nginx</h2><p>先配置一个 Nginx 试试效果，顺便也为了后面申请证书做准备工作。</p><p>我图片放置路径是 <code>/home/syncthing/Desktop/Hexo/Hexo</code>，那么新建一个 Nginx 配置：</p><pre><code class="bash">vim /etc/nginx/conf.d/pic.conf</code></pre><pre><code class="nginx">server {    listen 80;    server_name pic.neko7ina.com;    location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ {            root /home/syncthing/Desktop/Hexo/Hexo;            access_log   off;            expires      1d;    }}</code></pre><pre><code class="bash">nginx -s reload</code></pre><p>如果 80 端口防火墙没放行记得放行。</p><p>尝试访问一张图片，成功！</p><h2 id="申请-SSL-证书"><a href="#申请-SSL-证书" class="headerlink" title="申请 SSL 证书"></a>申请 SSL 证书</h2><p>HTTPS 站点如果引入的资源是 HTTP 会被提示不安全，为了避免这种问题，我使用 Let&#39;s Encrypt 申请 SSL 证书。</p><p>这里我们使用 <a href="https://acme.sh/" target="_blank" rel="noopener">acme.sh</a> 的 Nginx 模式来申请证书：</p><pre><code class="bash">curl  https://get.acme.sh | sh</code></pre><pre><code class="bash">acme.sh --issue  -d pic.neko7ina.com   --nginx</code></pre><p>申请完毕后将证书安装到指定位置：</p><pre><code class="bash">acme.sh  --installcert  -d  pic.neko7ina.com   \        --key-file   /etc/nginx/ssl/pic.neko7ina.com.key \        --fullchain-file /etc/nginx/ssl/fullchain.cer \        --reloadcmd  &quot;service nginx force-reload&quot;</code></pre><p>如果路径报错，就手动建下文件夹：</p><pre><code class="bash">mkdir /etc/nginx/ssl</code></pre><p>再执行即可。</p><p>最后开启自动更新，不出意外就不太需要管了。</p><pre><code class="bash">acme.sh  --upgrade  --auto-upgrade</code></pre><h2 id="完善-Nginx-配置"><a href="#完善-Nginx-配置" class="headerlink" title="完善 Nginx 配置"></a>完善 Nginx 配置</h2><p>重新修改 <code>pic.conf</code> 配置文件：</p><pre><code class="bash">vim /etc/nginx/conf.d/pic.conf</code></pre><pre><code class="nginx">server {    listen 80;    server_name pic.neko7ina.com;    return 301 https://pic.neko7ina.com$request_uri;}server {    listen 443 ssl http2;    listen [::]:443 ssl http2;    server_name pic.neko7ina.com;    access_log  /var/log/nginx/pic_access.log;    error_log   /var/log/nginx/pic_error.log;    ssl_certificate /etc/nginx/ssl/fullchain.cer;    ssl_certificate_key /etc/nginx/ssl/pic.neko7ina.com.key;    ssl_session_timeout 1d;    ssl_session_cache shared:SSL:50m;    ssl_session_tickets off;    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    add_header Strict-Transport-Security max-age=15768000;    ssl_stapling on;    ssl_stapling_verify on;    index index.html index.htm index.nginx-debian.html;    location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ {            root /home/syncthing/Desktop/Hexo/Hexo;            access_log   off;            expires      1d;    }}</code></pre><pre><code class="bash">nginx -s reload</code></pre><p>如果 443 端口防火墙没放行记得放行。</p><h1 id="善后工作"><a href="#善后工作" class="headerlink" title="善后工作"></a>善后工作</h1><p>将之前所有文档的图片链接都换成现在图片对应的链接就可以了。</p><p>在搭建自己的「图床」之前，我迁移过其他几个免费图床，这会甚至有点轻车熟路。</p><p>另外还要把图片处理一下，直接用原图太大，尤其是照片，会十分影响使用体验。</p><p>这里把照片 4K 的分辨率缩到 2K，再把所有图片压缩了一下，<a href="https://tinypng.com/" target="_blank" rel="noopener">TinyPng</a> 可是个好帮手。</p><p>到这里，所有工作就基本结束了。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>新浪图床这么多年的体验十分良好，不可谓不良心。</p><p>免费使用了这么久，我还是挺知足的。</p><p>以后，就要靠自己的机器活下去了。</p><p>慢是慢了点，好歹能看，不是吗？</p>]]></content>
    
    
    
    <tags>
      
      <tag>折腾</tag>
      
      <tag>Syncthing</tag>
      
      <tag>Linux</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>处理了点 macOS 上的小问题</title>
    <link href="undefinedsome-problems-on-macos.html"/>
    <url>some-problems-on-macos.html</url>
    
    <content type="html"><![CDATA[<p>最近折腾了一些东西，在使用的时候渐渐发现了一些问题。</p><p>逐个解决的同时，发现都是 macOS 上发生的，便写下这篇小结记录。</p><a id="more"></a><h1 id="DS-Store-文件"><a href="#DS-Store-文件" class="headerlink" title=".DS_Store 文件"></a>.DS_Store 文件</h1><p>.DS_Store 文件是 macOS 的 Finder 生成的文件，网上似乎有很多人对其深恶痛绝。</p><p>我对它的看法还可以，在 macOS 上的确也发挥了不错的作用。</p><p>但是在其他设备不仅没用，看着还很难受，每个文件夹都有整得跟病毒似的，所以还是动手料理了它。</p><p>.DS_Store 的处理方式搜了一下，基本就只有那些个方法在各个地方复读。</p><p>苹果官方提供的方法是防止在连接远程设备时在其上建立 .DS_Store 文件，对于本地硬盘还是不管用。</p><p>于是再仔细寻找一番，我发现了 <a href="https://asepsis.binaryage.com/" target="_blank" rel="noopener">Asepsis</a>。</p><p>仔细阅读的时候，我又发现了一个问题：这个软件在 macOS 10.8 - 10.10 上可直接使用，在 macOS 10.11 和 10.12 上需要做一番操作才能够使用。</p><p>这个操作就是，关闭 SIP。</p><p>考虑了一下，我关闭了 SIP，关闭操作可以参考 <a href="https://asepsis.binaryage.com/#sip" target="_blank" rel="noopener">这里</a>，然后再次安装 Asepsis，结果发现安装失败。</p><p>看来 Mojave 上还改动了什么，毕竟版本号已经 10.14 多了。</p><p>看来只有另寻他法了。</p><p>但是我又一想，我对 .DS_Store 本身又没啥意见，只要它别在出现在别的设备上，那么从这条路子出发是否可行呢？</p><p>答案是可以。</p><h2 id="Syncthing"><a href="#Syncthing" class="headerlink" title="Syncthing"></a>Syncthing</h2><p>Syncthing 的同步文件夹有个忽略模式，可以靠这个来控制需要同步的内容。</p><p>那么进入 Syncthing 的 Web UI 界面，展开要控制的文件夹，点击 <code>选项</code>，在弹出的窗口中选择 <code>忽略模式</code> 选项卡，在里面就可以编写忽略规则。</p><p><img src="https://pic.neko7ina.com:7777/images/20190422/1.png" srcset="/img/loading.gif" alt="忽略模式"></p><center><i>忽略模式</i></center><p><br></p><p>具体规则可以查看 <a href="https://docs.syncthing.net/users/ignoring.html" target="_blank" rel="noopener">官方文档</a>，这里加入一条新规则：</p><pre><code>(?d).DS_Store</code></pre><p>保存之后即可生效。</p><p>这样 Syncthing 就不会把 .DS_Store 文件同步到其他设备了。</p><h2 id="Synology"><a href="#Synology" class="headerlink" title="Synology"></a>Synology</h2><p>之前我还使用了 WebDAV 连接群晖观看其上的视频，Finder 在默认的情况下会往连接的远程设备上建立 .DS_Store 文件，这点十分不好。</p><p>还好处理起来很简单，苹果官方给了解决方法。</p><pre><code class="bash">defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE</code></pre><p>只要打开终端，粘贴以上命令，回车执行即可生效。</p><p>理论上执行后需要重启后才能生效，但我没重启后发现也没有生成了。</p><h1 id="Rime-输入法"><a href="#Rime-输入法" class="headerlink" title="Rime 输入法"></a>Rime 输入法</h1><p>Rime 输入法在 macOS 上的发行版叫鼠鬚管（Squirrel），不同于 Windows 上的小狼毫（Weasel），所以在将配置文件搬过来的时候，要 <code>weasel.custom.yaml</code> 的文件名，要改成 <code>squirrel.custom.yaml</code>。</p><p>不过这个问题不大，大问题在于，我每次部署的时候都提示失败，明明我仔细检查相关的文件都在。</p><p>虽然可以正常使用，但每次重新部署或者同步时提示错误，还是挺闹心的，于是在这上面花时间研究怎么解决。</p><p>一步步尝试，最终发现还是引入了袖珍简化字拼音输入方案产生的问题。</p><p>但是我能正常使用它打字啊，这算是个什么事……</p><p>尝试了几个方向都无果之外，无聊之下用 <a href="https://github.com/rime/plum" target="_blank" rel="noopener">东风破</a> 安装了全部的输入方案，再部署时就发现不报错了。</p><p>代价就是 Rime 用户文件夹里塞了一大堆我用不到的输入方案，不过问题能够解决，也就不太在乎了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>折腾</tag>
      
      <tag>Rime</tag>
      
      <tag>Syncthing</tag>
      
      <tag>Synology</tag>
      
      <tag>macOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Synology 的使用初体验</title>
    <link href="undefinedsynology.html"/>
    <url>synology.html</url>
    
    <content type="html"><![CDATA[<p>上个月在折腾 Syncthing 取代 Dropbox 时，我就觉得在 VPS 上存放不太稳。</p><p>虽然多终端都有副本，很难运气差到同时爆炸，但心底还是想有个更靠谱的存放地点。</p><p>于是，我对个人 NAS 存储就心痒痒了起来。</p><a id="more"></a><p>事先做了点简单功课，审视了下自身需求，对空间、性能及功能扩展方面要求不高，人特别懒又想稳定方便，那么黑群就直接 Pass 了。</p><p>最终选择了 Synology DS218j 这款，顺便买了 2 块希捷酷狼。</p><p><img src="https://pic.neko7ina.com:7777/images/20190420/1.jpg" srcset="/img/loading.gif" alt="真不便宜"></p><center><i>真不便宜</i></center><p><br></p><p>东西到了噼里啪啦一顿拆，安装起来很简单：盖子一拆，两块盘一插，螺丝一上，最后上盖上螺丝，完事儿！</p><h1 id="首次开机"><a href="#首次开机" class="headerlink" title="首次开机"></a>首次开机</h1><p>首次开机初始化时间较长，为了顺利使用需要下载官方的 <a href="https://www.synology.cn/zh-cn/support/download/DS218j#utilities" target="_blank" rel="noopener">Synology Assistant</a>，按照引导进行操作，进入 DSM 的引导界面。</p><p>引导步骤不多，信息也很易懂，一番下一步之后就来到主界面，这个时候群晖才算真正运行起来。</p><p>我最初计划是使用 RAID 1 牺牲性能和空间来保障数据安全，但了解到群晖的 SHR 在 2 盘时的机制和 RAID 1 相当，就不做更改了。</p><h1 id="公网使用"><a href="#公网使用" class="headerlink" title="公网使用"></a>公网使用</h1><p>购买了 NAS，我还是想在公网上使用的。</p><p>想从公网访问自家的群晖，大致有 3 个方向。</p><h2 id="QuickConncet"><a href="#QuickConncet" class="headerlink" title="QuickConncet"></a>QuickConncet</h2><p>QuickConncet 是群晖自己退出的能够在公网访问群晖设备的解决方案，只要你注册一个 Synology 账户并做一些设置，在群晖 <code>控制面板</code> - <code>QuickConncet</code> 中启用即可。</p><p>但是因为要过群晖的服务器，效果不太好说，使不使用就见仁见智了。</p><p>是最简单最方便，但效果不确定的方案。</p><h2 id="DDNS"><a href="#DDNS" class="headerlink" title="DDNS"></a>DDNS</h2><p>DDNS 有个使用先决条件：必须拥有公网 IP。</p><p>群晖自带 DDNS 支持，并提供 DDNS 注册，相比现在那些所谓说着免费但用起来处处设卡的某些商家，群晖这个简单易用到我想哭。</p><p>在 <code>控制面板</code> - <code>外部访问</code> 可以直接看到 <code>DDNS</code> 选项卡，点击 <code>新增</code>，<code>服务提供商</code> 选择 <code>Synology</code> 即可使用群晖的 DDNS 注册，选好域名填好信息，只要 <code>主机名称</code> 没人使用，就可成功开启 DDNS。</p><p><img src="https://pic.neko7ina.com:7777/images/20190420/2.png" srcset="/img/loading.gif" alt="DDNS"></p><center><i>DDNS</i></center><p><br></p><p>值得一提的是每台设备只能免费注册一个群晖提供的 DDNS。</p><p>但是这还没完呢，群晖因为是接在路由器下面的，通过 DDNS 也只是连到路由器，所以还需要在路由器上做端口转发，这才能够顺利连到群晖本体。</p><p>大部分路由器都有个端口转发的选项，找到这里，打开端口转发。</p><p>在下面的规则配置中添加一条，将 5000 端口映射到本地群晖 IP 的 5000 端口，保存生效。</p><p><img src="https://pic.neko7ina.com:7777/images/20190420/3.png" srcset="/img/loading.gif" alt="端口转发"></p><center><i>端口转发</i></center><p><br></p><p>试着访问一下，果然就通了。</p><h2 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h2><p>如果没有公网 IP，又不想用 QuickConncet，那么就只好用内网穿透了。</p><p>内网穿透的方案有很多，类似 frp、ngork。</p><p>因为我可以直接使用 DDNS 方案，这里就没有折腾，有需要的同学自己研究一下。</p><h1 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h1><p>将 NAS 暴露在公网是一件很危险的事情，但既然决定在公网上使用，安全工作一定要做好。</p><h2 id="强制-HTTPS-访问"><a href="#强制-HTTPS-访问" class="headerlink" title="强制 HTTPS 访问"></a>强制 HTTPS 访问</h2><p>打开 <code>控制面板</code> - <code>网络</code>，转到 <code>DSM 设置</code> 选项卡，勾上 <code>将 HTTP 连接自动重新导向 HTTPS（Web Station 及 Photo Station 除外）</code> 及 <code>启用 HTTP/2</code> 两个选项，HTTPS 端口最好也自己重新设置一个。</p><p>改好后可别忘记重新做条端口转发。</p><h2 id="Let-39-s-Encrypt-证书"><a href="#Let-39-s-Encrypt-证书" class="headerlink" title="Let&#39;s Encrypt 证书"></a>Let&#39;s Encrypt 证书</h2><p>涉及到安全，就肯定会涉及到证书。</p><p>群晖默认自签了一个证书，使用自签证书虽可达到目的，但每个设备都需要安装证书，否则就各种警告。</p><p>还好群晖支持 Let&#39;s Encrypt 签发，打开 <code>控制面板</code> - <code>安全性</code>，转到 <code>证书</code> 选项卡，点击 <code>新增</code> 添加新证书，之后的动作选择 <code>从 Let&#39;s Encrypt 获取证书</code>，并勾上 <code>设为默认证书</code>。</p><p><img src="https://pic.neko7ina.com:7777/images/20190420/4.png" srcset="/img/loading.gif" alt="Let&#39;s Encrypt 证书"></p><center><i>Let&#39;s Encrypt 证书</i></center><p><br></p><p>点击 <code>下一步</code>，填上之前申请的 DDNS 域名及个人邮箱，点 <code>应用</code> 提交，如无问题，很快就能成功签发证书。</p><p>虽然设为默认证书，但之前已经存在的系统还是使用的自签证书，点 <code>配置</code> 将各个服务的证书切换到新申请的证书才算完工。</p><p>Let&#39;s Encrypt 的证书有效期为 3 个月，群晖会自动续签，不用担心。</p><p>用 Chrome 直接打开，没有警告的感觉真好。</p><h1 id="扩展需求"><a href="#扩展需求" class="headerlink" title="扩展需求"></a>扩展需求</h1><h2 id="Syncthing"><a href="#Syncthing" class="headerlink" title="Syncthing"></a>Syncthing</h2><p>Syncthing 才是让咱有了购买个人 NAS 的根本原因啊，怎能没有它。</p><p>在上篇文章里更新了 Synology 中的使用方法，具体请点击 <a href="https://www.neko7ina.com/syncthing.html#Synology">这里</a>。</p><h2 id="WebDAV"><a href="#WebDAV" class="headerlink" title="WebDAV"></a>WebDAV</h2><p>偶尔也想在外面看点家里的视频，不太想搞啥花里胡哨的就直接在设备上打开文件，那么使用 WebDAV 是个不错的选择。</p><p>在 <code>套件中心</code> - <code>所有套件</code> 中，往下拉很快就能看到官方提供的 WebDAV Server。</p><p>安装后打开，只启用 HTTPS，端口号也改一个，应用。</p><p>当然别忘了再去加条端口转发。</p><p>不过 Windows 自带的网络映射不太好用，可以考虑一下这款 <a href="https://www.raidrive.com/" target="_blank" rel="noopener">RaiDrive</a>，界面简洁干爽，功能强大，就容量显示有点小 BUG，但瑕不掩瑜。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>本来是为了我常年积累的东西找个安全的地儿，但是意外地挖掘了更多的使用场景，总结下来还是非常值得的消费。</p><p>得，就不多说了，我还得去把各个地儿的东西都挪过来呢！</p>]]></content>
    
    
    
    <tags>
      
      <tag>折腾</tag>
      
      <tag>群晖</tag>
      
      <tag>Synology</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>被逼无奈，用 Syncthing 打造自己的同步云盘</title>
    <link href="undefinedsyncthing.html"/>
    <url>syncthing.html</url>
    
    <content type="html"><![CDATA[<p>3 月份，Dropbox 悄悄「公布」了一项新改动：</p><blockquote><p>从 2019 年 3 月开始，Basic 用户最多只能关联 3 台设备。</p><p>Plus 和 Professional 用户可以关联的设备数量没有限制。</p><p>Business 用户可以关联的设备数量没有限制，但 Advanced 和 Enterprise Dropbox Business 管理员能够限制其团队可以关联的设备数量。</p></blockquote><p>对于我这种设备绝对不止 3 台的人来说，这种改动无疑是逼着我去付费。</p><p>Dropbox 的付费对我又不太友好，最低档也要 8 刀一个月，还得年付。</p><p>虽然 Dropbox 特别好用，但是新改动对于我来说太致命，也让我不得不寻找一个新的解决方案了。</p><a id="more"></a><p><a href="https://syncthing.net/" target="_blank" rel="noopener">Syncthing</a> 是一款开源的同步工具，简单了解一下发现可以实现我的需求，于是就动了下手。</p><h1 id="安装与更新"><a href="#安装与更新" class="headerlink" title="安装与更新"></a>安装与更新</h1><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><h3 id="安装-Syncthing"><a href="#安装-Syncthing" class="headerlink" title="安装 Syncthing"></a>安装 Syncthing</h3><p>本来考虑到家里有公网 IP，就直接 24 小时开家里的 PC，其他设备都以它为主进行同步。</p><p>不过考虑再三，保险起见，还是在 VPS 上部署一个服务端。</p><p>其实这个服务端本质上也是客户端，因为我的 VPS 系统是 Ubuntu 18.04 LTS，所以这个也可以视为 Linux 系统下的客户端使用指南。</p><p>打开 <a href="https://syncthing.net/" target="_blank" rel="noopener">官网</a>，找到最新的 Linux 64 bit 版的客户端，将其下到 VPS 上，并解压出来，将其中的执行程序复制到 <code>/usr/local/bin</code> 目录下。</p><pre><code class="bash">wget https://github.com/syncthing/syncthing/releases/download/v1.1.0/syncthing-linux-amd64-v1.1.0.tar.gztar xzvf syncthing-linux-amd64-v1.1.0.tar.gzcd syncthing-linux-amd64-v1.1.0cp syncthing /usr/local/bin</code></pre><p>如果以 root 用户启动 Syncthing 会被提示不建议在 root 用户下运行，所以在正式使用之前，先建立一个专门的用户。</p><pre><code class="bash">adduser syncthing</code></pre><p>按照引导将用户建立完成，切换到刚创建的用户 syncthing 运行一次 Syncthing，程序会将配置文件释放出来。</p><p>停止运行程序，先编辑配置文件。</p><pre><code class="bash">vim /home/syncthing/.config/syncthing/config.xml</code></pre><p>找到 <code>&lt;address&gt;</code> 这行，将 <code>127.0.0.1</code> 改为 <code>0.0.0.0</code>，这样就可以从公网访问 Web UI 了，保存退出。</p><p>再次直接运行 Syncthing，然后在地址栏输入 <code>http://w.x.y.z:8384/</code> 进入 Syncthing 的 Web UI 管理界面，第一次访问时会提醒设置账号及密码，建议设置并重启 Syncthing。</p><p>这时候 Syncthing 就已经可以开始正常使用了，如果使用了防火墙，在过程中对相应的规则进行放行。</p><p>比如我使用的是 UFW，那么将执行以下命令：</p><pre><code class="bash">ufw allow syncthingufw allow syncthing-gui</code></pre><h3 id="作为服务启动"><a href="#作为服务启动" class="headerlink" title="作为服务启动"></a>作为服务启动</h3><p>Syncthing 非常地贴心啊，在第一次启动时不止在用户的 <code>.config</code> 目录释放了配置文件及证书，也释放了 systemd 服务文件，可以直接启用。</p><p>不过我为了偷懒，拿它的文件改了一下，指定了用户，这样在用 systemd 控制时可以少打点字母。</p><pre><code class="bash">vim /lib/systemd/system/syncthing.service</code></pre><pre><code>[Unit]Description=SyncthingDocumentation=man:syncthing(1)After=network.target[Service]User=syncthingExecStart=/usr/local/bin/syncthing -no-browser -no-restart -logflags=0Restart=on-failureSuccessExitStatus=3 4RestartForceExitStatus=3 4# HardeningProtectSystem=fullPrivateTmp=trueSystemCallArchitectures=nativeMemoryDenyWriteExecute=trueNoNewPrivileges=true[Install]WantedBy=multi-user.target</code></pre><pre><code class="bash">systemctl enable syncthingsystemctl start syncthing</code></pre><h3 id="更新-Syncthing"><a href="#更新-Syncthing" class="headerlink" title="更新 Syncthing"></a>更新 Syncthing</h3><p>下新版本的 Syncthing，关闭当前运行的程序，将可执行文件替换即可，操作如下：</p><pre><code class="bash">wget https://github.com/syncthing/syncthing/releases/download/v1.1.1/syncthing-linux-amd64-v1.1.1.tar.gztar zxvf syncthing-linux-amd64-v1.1.1.tar.gzcd syncthing-linux-amd64-v1.1.1systemctl stop syncthingcp syncthing /usr/local/binsystemctl start syncthing</code></pre><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>Windows 平台下有个很好用的 GUI 客户端 <a href="https://github.com/canton7/SyncTrayzor/releases/latest" target="_blank" rel="noopener">SyncTrayzor</a>，基本上就是下载、安装、打开使用，开袋即食。</p><p>GUI 客户端本身及 Syncthing 核心都会提示更新，按照提示操作即可。</p><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><p>没啥说的，<a href="https://play.google.com/store/apps/details?id=com.nutomic.syncthingandroid" target="_blank" rel="noopener">官方客户端</a>。</p><p>更新也是按照 Google Play 官方提示更新。</p><h3 id="Synology"><a href="#Synology" class="headerlink" title="Synology"></a>Synology</h3><p>打开 <code>套件中心</code> - <code>设置</code> - <code>套件来源</code>，点击 <code>新增</code> 添加第三方来源 SynoCommunity，地址为 <a href="http://packages.synocommunity.com/" target="_blank" rel="noopener">http://packages.synocommunity.com/</a>，确定保存。</p><p><img src="https://pic.neko7ina.com:7777/images/20190331/1.png" srcset="/img/loading.gif" alt="添加来源"></p><center><i>添加来源</i></center><p><br></p><p>刷新套件中心会看到多出一个 <code>社群</code> 类别，点进去找到 Syncthing 安装即可。</p><p><img src="https://pic.neko7ina.com:7777/images/20190331/2.png" srcset="/img/loading.gif" alt="安装 Syncthing"></p><center><i>安装 Syncthing</i></center><p><br></p><p>这个客户端 Web GUI 默认监听 <code>0.0.0.0:8384</code>，可以直接访问群晖内网 IP 的 8384 端口而不需要更改任何设置。</p><p>更新可以依赖套件中心（可能会慢），或 Web GUI 自动更新。</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>不论服务端还是客户端，使用逻辑都是同一套的 Web UI，服务端访问方式上面已说，本地客户端可以访问 <code>http://127.0.0.1:8384/</code>。</p><p>当然，SyncTrayzor 之类的客户端自带界面。</p><p><img src="https://pic.neko7ina.com:7777/images/20190331/3.png" srcset="/img/loading.gif" alt="Web GUI 界面"></p><center><i>Web GUI 界面</i></center><p><br></p><p>右上角 <code>操作</code> 中有个 <code>显示 ID</code>，点开可以看到 ID 和二维码，方便其他设备添加该设备，点击右下角的 <code>添加远程设备</code> 输入 ID 提交添加申请，被添加的设备通过后设备之间就联系上了。</p><p>在用电脑添加服务端时，在 <code>共享</code> 选项卡中把 <code>作为中介</code> 勾上，这样其他设备在添加服务端后，会自动把与服务端联系的设备自动添加上。</p><p><img src="https://pic.neko7ina.com:7777/images/20190331/4.png" srcset="/img/loading.gif" alt="添加设备"></p><center><i>添加设备</i></center><p><br></p><p>设备添加完了，就该设置同步了。</p><p>点击 <code>添加文件夹</code> 打开界面。</p><p><img src="https://pic.neko7ina.com:7777/images/20190331/5.png" srcset="/img/loading.gif" alt="添加文件夹"></p><center><i>添加文件夹</i></center><p><br></p><p>设置一下 <code>文件夹路径</code>，不要去 <code>动文件夹 ID</code>，<code>文件夹标签</code> 按自己的习惯填写。</p><p>然后打开 <code>版本控制</code> 选项卡。</p><p><img src="https://pic.neko7ina.com:7777/images/20190331/6.png" srcset="/img/loading.gif" alt="版本控制"></p><center><i>版本控制</i></center><p><br></p><p>Syncthing 有一个强大的版本控制功能，合理设置能有效降低误操作带来的损失。</p><p>对于一般使用者来说，<code>简易版本控制</code> 够用了，保留版本数量随自己喜好。</p><p>实际使用中，效果是这样的：</p><p><img src="https://pic.neko7ina.com:7777/images/20190331/7.png" srcset="/img/loading.gif" alt="恢复历史版本"></p><center><i>恢复历史版本</i></center><p><br></p><p>这时再回到 <code>共享</code> 选项卡，把文件夹共享给要同步的设备，目标设备接受就算完成了。</p><p>如果设备勾选了 <code>自动接受</code>，在共享勾上时就会自动接受并开始同步，但会在默认目录建立，所以如果对路径有比较强的规划，不推荐给设备勾选此选项。</p><p>不过这里有个问题，Android 客户端接受之后会让用户设置文件夹属性，并指定位置，但 Web UI 界面下接受后就直接在默认目录按照 <code>文件夹标签</code> 建立文件夹，这个并不符合所有人的使用习惯，起码不符合我的。</p><p>为了避免这个文件，我会在所有设备上先建立好要同步的文件夹，指定好路径，只要所有设备里同步文件夹的 <code>文件夹 ID</code> 一致，设置完后勾上共享就可以开始同步了。</p><p>到这里，属于我自己的私人同步云盘就建立起来并正常开始工作了，使用方式和 Dropbox 并无太大区别，将要同步的内容丢到文件夹中即可。</p><h1 id="微小的工作"><a href="#微小的工作" class="headerlink" title="微小的工作"></a>微小的工作</h1><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>Web UI 的字体我总是看它不太爽，尤其是字母和数字对不齐真是要了我的老命。</p><p><img src="https://pic.neko7ina.com:7777/images/20190331/8.png" srcset="/img/loading.gif" alt="这字体可真让我难受"></p><center><i>这字体可真让我难受</i></center><p><br></p><p>看了看好像是默认字体的锅，想了想还是没忍住把它给干了。</p><p>使用类似 <a href="https://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmne" target="_blank" rel="noopener">Stylus</a> 之类的扩展，在里面添加一个新样式，写入如下内容：</p><pre><code class="css">h4 {    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;}</code></pre><p>然后应用于本地及远程 Web UI 的地址即可，效果如下：</p><p><img src="https://pic.neko7ina.com:7777/images/20190331/9.png" srcset="/img/loading.gif" alt="对齐后就舒服了"></p><center><i>对齐后就舒服了</i></center><p><br></p><h2 id="eaDir-文件夹"><a href="#eaDir-文件夹" class="headerlink" title="@eaDir 文件夹"></a>@eaDir 文件夹</h2><p>DSM 会在含有图片的文件夹建立索引，@eaDir 文件夹就是为了实现这个功能而在目录自动添加的。</p><p>但是对我来说，其他设备上看到这个挺烦的，还好 Syncthing 支持忽略模式，可以写一条规则避免将这个文件夹同步到别的设备上。</p><p>点击要修改的文件夹，点击 <code>选项</code>，转到 <code>忽略模式</code> 选项卡，在下面正文部分添加一条：</p><pre><code>@eaDir</code></pre><p>保存即可生效。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>这么多天使用下来，Syncthing 还是能满足我的使用要求的，并且相对于 Dropbox 来说，我有了一些更自由的选项。</p><p>天下宴席，终有散时，Dropbox，我们后会有期，感谢这么些年来给我带来的美好体验。</p>]]></content>
    
    
    
    <tags>
      
      <tag>折腾</tag>
      
      <tag>多平台</tag>
      
      <tag>Syncthing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的输入法，我的 Rime</title>
    <link href="undefinedrime.html"/>
    <url>rime.html</url>
    
    <content type="html"><![CDATA[<p>我这个人比较守旧，很多习惯不到非变不可的时候，是很少会主动去寻求改变的。</p><p>所以即使微软为了自带的拼音输入法砍了 Bing 输入法之后，我还是一直在用着它，它是我当时了解的唯一一款可以关闭左 Shift 只用右 Shift 切换中英文的输入法。</p><p>Rime 是我发现的第二款。</p><a id="more"></a><p>Rime，中文名为 <a href="https://rime.im/" target="_blank" rel="noopener">中州韵输入法引擎</a>，是由佛振编写的开源中文输入法。</p><p>现在的 Windows 发行版在 Win 10 上的表现已经相当不错，尤其相对于几年前，对我个人来说是能用和不能用的区别。</p><h1 id="初次见面"><a href="#初次见面" class="headerlink" title="初次见面"></a>初次见面</h1><p>从官网上下载并安装了最新的 Windows 版，按 F4 切换到朙月拼音简化字，就可以像一般输入法一样使用，感觉还不错。</p><p>简单适应了一下，就开始输入法的调教工作了。Rime 被很多人喜爱，强大的定制功能功不可没，具体可以看官方的 <a href="https://github.com/rime/home/wiki/CustomizationGuide" target="_blank" rel="noopener">定制指南</a>。</p><p>那么按照我的习惯，首先要干掉左 Shift 键。</p><p>安装时，程序会让用户指定一个 Rime 用户文件夹，在文件夹里我们建立文件 <code>default.custom.yaml</code> 并编辑，加入下面一段：</p><pre><code class="yaml">patch:  &quot;ascii_composer/switch_key/Shift_L&quot;: noop</code></pre><p>重新部署后再按了按左 Shift，果然就和不存在一样，很好。</p><p>用了一段时间之后，我又发现标点符号的确提供了更多选择，但是会影响键入速度，于是我将比较常用的标点符号又处理了一下。</p><p>在 Rime 用户文件夹建立 <code>luna_pinyin_simp.custom.yaml</code> 并加入以下内容：</p><pre><code class="yaml">patch:  punctuator:    import_preset: default    half_shape:      &#39;`&#39;: &#39;`&#39;      &#39;@&#39;: &#39;@&#39;      &#39;#&#39;: &#39;#&#39;      &#39;%&#39;: &#39;%&#39;      &#39;=&#39;: &#39;=&#39;      &#39;/&#39;: &#39;/&#39;      &#39;\&#39;: &#39;、&#39;      &#39;~&#39;: &#39;~&#39;    full_shape:      &#39;`&#39;: &#39;`&#39;      &#39;@&#39;: &#39;@&#39;      &#39;#&#39;: &#39;#&#39;      &#39;%&#39;: &#39;%&#39;      &#39;=&#39;: &#39;=&#39;      &#39;/&#39;: &#39;/&#39;      &#39;\&#39;: &#39;、&#39;</code></pre><p>好像还少了点什么？哦自定义短语功能，继续编辑 <code>luna_pinyin_simp.custom.yaml</code> 加入以下内容：</p><pre><code class="yaml">patch:  &quot;engine/translators/@next&quot;: table_translator@custom_phrase  custom_phrase:    dictionary: &quot;&quot;    user_dict: custom_phrase    db_class: stabledb    enable_completion: false    enable_sentence: false    initial_quality: 1</code></pre><p>至于文件 <code>custom_phrase.txt</code> 参考 <a href="https://gist.github.com/lotem/5440677" target="_blank" rel="noopener">这里</a> 建立放在 Rime 用户文件夹，编辑内容即可实现。</p><p>另外，一个文件内只需要一段 Patch，多个定制直接在下面跟定制内容即可。</p><p>这么简单定制了一下，基本就回归了我的日常使用习惯。</p><h1 id="深陷泥潭"><a href="#深陷泥潭" class="headerlink" title="深陷泥潭"></a>深陷泥潭</h1><p>使用了半个多月，我发现了一个事情：在我的候选列表首页中，有一些没有用过的字占据着，不仅看着不爽，还影响我的选字效率。</p><p><img src="https://pic.neko7ina.com:7777/images/20190228/1.png" srcset="/img/loading.gif" alt="没用过的字"></p><p><center><i>没用过的字</i></center><br><br></p><p>发现这个现象后，我开始有意识地去注意这些字，最后发现这些字的候选顺序是会和另外一个字绑定的。比如「𧹒」，就一直跟着「买」，跟兄弟似的谁也不离谁。</p><p>向作者提了个 <a href="https://github.com/rime/home/issues/322" target="_blank" rel="noopener">issue</a>，在交流的过程中我明白了几个事情。</p><ul><li>朙月拼音简化字实际上是繁转简而来，这也是你在查看用户词典时发现所有文字记录都是繁体的原因。</li><li>用户词典记录的词频是按繁体字来计的，转换出的所有简体字共享词频，这个是这些字都会紧跟其他字的原因。</li></ul><p>作者提供的两种解决方案工作量都不小，为了图省事，我借助修改 <code>custom_phrase.txt</code> 文件固定「买」「卖」两字顺序，总算能够让「卖」跟在「买」后面了。</p><h1 id="从头再来"><a href="#从头再来" class="headerlink" title="从头再来"></a>从头再来</h1><p>可能我考虑的比较多，我总觉得这种使用方式会有隐患，等到真的用很长时间后再考虑就太痛苦了。</p><p>于是在寻觅之下，我发现了另外一个输入方案——<a href="https://github.com/rime/rime-pinyin-simp" target="_blank" rel="noopener">袖珍简化字拼音</a>。</p><p>这是一款以简体中文为出发点的输入方案，简单试用了一下没有什么问题，看了下记录的用户词典也是简体中文，就是字库的确是比较薄弱。</p><p>为了弥补字库的问题，在搜索过程中我又发现了这个 <a href="https://github.com/alswl/Rime" target="_blank" rel="noopener">项目</a>。其中「现在汉语常用词表」，特别适合作为起步基础词库，那么我们就将它带进输入法中。</p><p>首先在 Rime 用户文件夹中创建文件 <code>pinyin_simp.custom.yaml</code> 并编辑，添加以下内容：</p><pre><code class="yaml">patch:  &quot;translator/dictionary&quot;: pinyin_simp.extended</code></pre><p>这样我们就将输入法的词典指定到这个文件了。</p><p>然后再在文件夹中创建文件 <code>pinyin_simp.extended.dict.yaml</code>，打开添加以下内容：</p><pre><code class="yaml"># Rime dictionary# encoding: utf-8#---name: pinyin_simp.extendedversion: &quot;2019.02.02&quot;sort: by_weightuse_preset_vocabulary: falseimport_tables:  - pinyin_simp  - luna_pinyin.xiandaihanyuchangyongcibiao...</code></pre><p>这里可以看出我们这边引用了两个词典，一个是袖珍拼音输入法原本的词典，另一个是我们找到的。</p><p>将 <a href="https://raw.githubusercontent.com/alswl/Rime/master/luna_pinyin.xiandaihanyuchangyongcibiao.dict.yaml" target="_blank" rel="noopener">现代汉语常用词表</a> 文件下载并复制到 Rime 用户文件夹，最后再将之前在朙月拼音简化字方案中的一些自定义搬运过来，重新部署就大功告成了。</p><p>试了试，好像没什么问题。以前的用户词典也没养多久，懒得处理，就直接从 0 开始重新养吧。</p><h1 id="如臂使指"><a href="#如臂使指" class="headerlink" title="如臂使指"></a>如臂使指</h1><p>从更换了方案使用到现在，期间时不时有新的想法，在多次尝试和积累之后，Rime 已经越来越顺手，同时方案也打磨得越来越细，我有点能体会很多用户推崇 Rime 的乐趣究竟在哪里了。</p><p>我的定制也比开始要变化了更多，我将这些放在 GitHub 上，定期更新，既是备份，也希望能帮到他人。</p><p>平心而论，从一般人的眼光中，Rime 并不是一款能够吊打其他家的存在。但是它能给我更多的可能，以及多了向流氓说「不」的机会，这是我喜欢并使用 Rime 的原因。</p><h1 id="附：GitHub-项目"><a href="#附：GitHub-项目" class="headerlink" title="附：GitHub 项目"></a>附：GitHub 项目</h1><p><a href="https://github.com/huaxianyan/Rime" target="_blank" rel="noopener">https://github.com/huaxianyan/Rime</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>折腾</tag>
      
      <tag>多平台</tag>
      
      <tag>Rime</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>修车</title>
    <link href="undefinedrepair-bicycle.html"/>
    <url>repair-bicycle.html</url>
    
    <content type="html"><![CDATA[<p>去年为了通勤方便，买了一辆米家骑记电助力车。</p><p>但是 2018 年底刚过保后，后胎爆完前胎漏，补了两次后电助力竟又出现了问题，不得不怀疑是商家设置陷阱卡发动了。</p><p>繁忙的出差后，终于是有时间去修这个车，查了查最近的服务网点——嗯，在徐汇区，于是滴滴叫了个车，出发。</p><a id="more"></a><p>和司机师傅从自行车修缮问题聊到国家人口危机的功夫，目的地到了，聊天话题是怎么渐进的我已然忘记。</p><p>推着车进了店内，把车扔给了师傅。</p><p>本以为会费好大一番功夫，甚至做好先回家修好过来拿的心里准备，然而师傅拆了个束带理了下线，车就修好了。</p><p>师傅顺便把车保养了一下：调了调刹车，清理了灰尘，上了机油。</p><p>接过车试了试，不错，修好了。</p><p>打车过来挺贵的，时间还没到下班时间，骑车回去貌似是个不错的选择。打开地图看了看导航，十几公里不算太远。</p><p>结果这苹果地图，没有骑行路线。选了个步行路线，在徐家汇附近就碰到了各种非机动车不能走的路，只好在路边在人行道上缓慢骑行，左绕右绕找寻能骑车的路。</p><p>离开徐家汇，情况变得好了起来，但是这种好事没持续太久就被终结——我被苹果地图导到了外滩。</p><p>外滩这地方我也没正经来过，但是大概还是知道骑车在这里是不太能行的。果然不然，骑了一小段就被交警呵斥不准骑车，让我下车推行。</p><p>好吧，所以本来是出来修个车，结果在外滩这里花费了最多的时间。修车修出一个外滩一圈游，还行吧。</p><p><img src="https://pic.neko7ina.com:7777/images/20190114/1.jpg" srcset="/img/loading.gif" alt="外滩一游"></p><center><i>外滩一游</i></center><p><br></p><p>过了桥到了虹口地界，骑行体验就友好很多。运气也很不错，一路很少红灯，只用了半个小时就骑完了剩下的路程，回到了公司继续愉快的摸鱼。</p><p>更愉快的是，不用早起半小时去等那公交，继续我的骑车通勤啦！</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日本之行</title>
    <link href="undefinedtravel-in-japan.html"/>
    <url>travel-in-japan.html</url>
    
    <content type="html"><![CDATA[<p>去日本玩的计划，在这几年里提出好几次，然而因为种种原因都没能执行得了。</p><p>在今年过了一半，突然又想起这件事，又逢工作空闲之时，于是找了好友合计了一下，决定在 11 月一起前往日本游玩。</p><a id="more"></a><h1 id="街机"><a href="#街机" class="headerlink" title="街机"></a>街机</h1><p>去日本的街机厅玩耍，是这次旅行主要目的。</p><p>为了最大程度方便地玩街机，我们最终选定下榻酒店为秋叶原华盛顿酒店，距离 JR 百米之内，再多走一点就是大名鼎鼎的秋叶原电器街。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/1.jpg" srcset="/img/loading.gif" alt=""></p><p><img src="https://pic.neko7ina.com:7777/images/20181231/2.jpg" srcset="/img/loading.gif" alt=""></p><p><img src="https://pic.neko7ina.com:7777/images/20181231/3.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>秋叶原电器街</i></center><br> <br> </p><p>出发当天刚好是星期日，碰上「步行者天堂」，关键路段封禁所有车辆，行人在大马路上随意倾轧，加上首次到来的新鲜感，整个人情绪瞬间释放出来，兴奋得不得了。</p><p>作为产业地标的秋叶原，这里遍布了街机厅。</p><p>我目前游玩过的街机厅，都是以 100 円 = 1 Credit 为换算。100 日元硬币消耗很大，所以每一层都有一台兑币机。</p><p>但是，有一张神奇的小卡片叫 Suica 卡。</p><p>开始办这张卡是用来在日本作为交通的支付手段，但后来我发现，这张卡片除了交通出行外，还可以在自动贩卖机购物，最牛的就是大部分街机，可以直接刷 Suica 卡代替投币去获取 Credit，简直不能太方便！</p><p>虽然有少部分机器还不支持，但是已经极大缓解兑换、携带硬币的工作量，点赞！</p><h2 id="DISSIDIA-FINAL-FANTASY"><a href="#DISSIDIA-FINAL-FANTASY" class="headerlink" title="DISSIDIA FINAL FANTASY"></a>DISSIDIA FINAL FANTASY</h2><p>首先找的，就是《纷争 最终幻想》。</p><p>实话说它还比较难找，我是在 Hey 里找到的。虽然后来通过匹配到的队友 or 对手得知在 SEGA 1号馆也有，但是整个秋叶原可能也就这两家有了。</p><p>纷争的 PS4 版我已经玩了好久，现在反过来接触街机版，硬件稍有差异，但核心的操作方式没有变化，很快就进入熟手状态。</p><p>不过这个时间点，刚好是 FF10 的 Yuna 配送没多久，拿着我常用的 Tina 进入战斗发现除了我之外清一色的都是 Yuna。</p><p>不得不说 Yuna 的性能是真的好，作为一个射手弹道速度快慢皆有，有延迟斩，有陷阱，EX 技能更是过分，Brave 攻击和追击就算了，还有 HP 攻击和自保，技师水平厉害一些，Yuna 会是一个相当难缠的对手。</p><p>被一堆 Yuna 暴锤几盘有点不爽，我也随大流换了 Yuna 加入战斗，熟悉了一会之后暴打一盘对手，总算是心满意足了。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/4.jpg" srcset="/img/loading.gif" alt=""></p><p><img src="https://pic.neko7ina.com:7777/images/20181231/5.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>暴打与被暴打</i></center><br> <br> </p><p>虽然 PS4 版玩了好久，但是街机版玩起来还是有点上瘾。事后思考了一下，除了新鲜感的加成外，良好的匹配体验起到了决定性的作用——PS4 版的网络不畅、匹配到电脑、人数不均等问题，在街机版上均不会出现，体验可谓相当优秀了。</p><h2 id="太鼓の達人"><a href="#太鼓の達人" class="headerlink" title="太鼓の達人"></a>太鼓の達人</h2><p>《太鼓达人》是我去街机厅一定要玩的游戏！很多时候我出门打街机只为了打太鼓——虽然水平稀烂，但是并不妨碍我对它的热爱。</p><p>国内的太鼓基本都停留在 12 这个版本，上海烈火某次更新之后，有一台 13 版，但即使这样它们也同属于旧街机，歌曲数量有限。</p><p>日本作为太鼓的出生地，其网络运营街机从诞生至今，大版本已经来到第十个版本，小更新次数接近百次。目前游戏内收录的曲目高达 700 多首，偶像大师的歌比之旧街机的几首，更是不知道多到哪里去了！</p><p>当然，每次必玩的保留曲目《夏祭り》，怎么能忘记呢？私棍虽然没带，但是好歹还是打过去了，不丢人不丢人。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/6.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>「保留曲目」</i></center></p><h2 id="初音ミク-Project-DIVA-Arcade"><a href="#初音ミク-Project-DIVA-Arcade" class="headerlink" title="初音ミク-Project DIVA Arcade"></a>初音ミク-Project DIVA Arcade</h2><p>说起来，《初音未来 歌姬计划》街机版也曾移植了 PS4 平台，但是这个我玩起来却是各种阻碍了。</p><p>原因无他，需要熟悉街机的手台。</p><p>PS4 版的初音我一般是用左、上方向键和圈叉来进行游戏，将所有按键垂直到一条水平线上，从左到右分别是框（左）、三角（上）、叉和圈。</p><p>但街机版的手台从左到右分别为三角、框、叉和圈，这就导致我在玩的时候经常把三角和框的指令敲错，游戏也打的惨不忍睹……</p><p>多玩了几天之后，情况有所好转。不过游玩的过程中发现，街机版有不少歌曲的谱面与 PS4 版并不相同，打得磕磕绊绊。</p><p>算了，快乐就完事儿了。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/7.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>惨不忍睹</i></center></p><h2 id="オンゲキ"><a href="#オンゲキ" class="headerlink" title="オンゲキ"></a>オンゲキ</h2><p>《音击》可谓是这次街机历程中的最大惊喜了。</p><p>我和好友，一个本意为亲手摸一些早已知晓的街机，一个则是要在 FGO 的街机抽卡，但是在旅程中都迷上了这款游戏。</p><p>《音击》是 SEGA 今年刚运营的一款音游，虽说游戏的核心玩法还是下落式音游，但是这个游戏融合的要素有点过多，使人不能当成一款简单的音游来看。</p><p>从游戏游玩本身来说，加入了一个把手，使得下落式音游中融合了弹幕游戏躲避的概念，同时加入的恢复手段使得敌我双方有了攻击以及血量的概念。</p><p>重点来了，这个基础上，游戏把一般卡牌游戏的整套核心系统完整地搬了过来，人物的属性直接影响到游戏评价，那么抽卡课金，自然也就有啦。</p><p>抽卡课金不仅可以获得更新、更高稀有度的人物角色，同时还肩负了「开花」的职责——否则即使你在游戏中获得了人物，等级上限也只有 10 级，需要自己慢慢去上限突破哟。</p><p>客观来说，这个游戏还是比较劝课的，但是没有骗课。游戏在新鲜劲褪去之后，能让人感受到其内涵与深度，在商业要素中跳脱出，是一款不错的游戏。</p><p>我为了这款计划之外的惊喜，也临时在全家随便买了副 3.5 mm 的耳机。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>期间我也去试了试 FGO 的街机，可能是我自命对即时动作战斗游戏较为挑剔，这个我真是不太满意，加上课金太重，很快就放弃了。</p><p>Hey 的娃娃机里看到两台装有 FF14 的鲶鱼精，本打算抓来送给某个沙雕群友，奈何集众人之力死活抓不上来，看它那张脸还特别气。真的，好气！</p><p>最后，目前接触的街机厅，我和朋友一致评价最好的是池袋的 SEGA——机器品种全、数量多。</p><h1 id="中古"><a href="#中古" class="headerlink" title="中古"></a>中古</h1><p>淘中古，是我来日本的另一个主要目的。</p><p>从一个架子到另一个架子，从一家中古店到另一家中古店，寻找自己心心念念目标的时候，意外发现其他好物的惊喜，这种探寻过程真是让我欲罢不能。</p><p>我对 FF6 可谓是相当喜爱了，所以寻找成色不错的 FF6 游戏是我搜寻的目标。因为 SFC 版在多年前已经淘到，我的目光会更多放在 PS 版及 GBA 版上。</p><p>很快，在第一天我就找到了 PS 版和 GBA 版，不过 PS 版的成色有点糟糕，便打定主意打算再找一找。</p><p>期间意外发现了 NGC 版《银河战士 Prime》系列前两作，PS2 版《秋之回忆 6》的限定版以及成色非常非常好的《超级银河战士》——价格高到我当时没下的去手，还是后来回来拿下的。</p><p>最终，我在一家不起眼的店里找到一盘相当不错的 PS 版 FF6，完成了自己下心愿。</p><p>但是问题来了，我要两盘 PS 版的 FF6 有什么用呢？</p><p>当然是没用啦，所以我决定将前一盘再卖给中古店。</p><p>于是在一天早上，我带着即将被我抛弃的游戏，来到中古店。只不过这次我的身份，将从消费者变成变卖者。</p><p>到地方一看，那人是真的多。</p><p>店家还没开门，有已经有大量的人带着自己的物品在店门口排起了长队，沿着墙转角再转角才能看到队伍的尾巴。</p><p>排好队后，会有工作人员询问你要变卖的物件，给你发放类别及号码牌。开门后，将这些牌子交给里面的工作人员，他们很快将人引入到各自的处理柜台前，场面一度热闹。</p><p>我那盘花了 3000 多日元购买的 PS 版 FF6，最终只换得了 500 日元。</p><p>算了嘛，总比带回去没有用的好，这个钱就当是体验中古回收的门票好了。</p><p>有买有卖，才是完整的中古体验，不虚此行了。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/8.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>最后的收获，超银放在朋友那儿还未取回</i></center></p><h1 id="食物"><a href="#食物" class="headerlink" title="食物"></a>食物</h1><p>吃是一个无法回避的问题，也是一个要去追寻的方向。</p><p>在这几天，我吃了好多东西：咖喱、拉面、牛舌、猪扒、蟹……但是留下印象的，就几个。</p><p>友都八喜 9 楼的一家猪扒饭，分量十足、汁多肉嫩，我到最后差点都没吃完，一千四五百日元的价格，实在是有点舒爽。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/9.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>猪扒饭</i></center><br> <br> </p><p>浅草「今半本店」的寿喜锅，材料品质很好，那种传统日式家庭寿喜锅的感觉是让我印象深刻的根本原因，比国内 MOMO 牧场之流，要更贴近我理想中寿喜锅的样子。</p><p>新宿「かに道楽」的螃蟹，肉质鲜甜，吃法多样，最重要的是吃起来肉多很爽而且不麻烦。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/10.jpg" srcset="/img/loading.gif" alt=""></p><p><img src="https://pic.neko7ina.com:7777/images/20181231/11.jpg" srcset="/img/loading.gif" alt=""></p><p><img src="https://pic.neko7ina.com:7777/images/20181231/12.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>蟹</i></center></p><h1 id="高尾山"><a href="#高尾山" class="headerlink" title="高尾山"></a>高尾山</h1><p>在来之前，有另外一位朋友说将会和我们在日本碰头，然后一起去找个林中旅馆泡温泉赏红叶。</p><p>然而，时间日益接近，行程却迟迟未定。我们对此越来越表示怀疑，于是在朋友当地好友的建议下，我们来到了高尾山。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/13.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>高尾山脚</i></center><br><br> </p><p>天公不作美，在上山之后，雨点开始洒落大地。</p><p>我和朋友在雨中，缓步向山顶迈进。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/14.jpg" srcset="/img/loading.gif" alt=""></p><p><img src="https://pic.neko7ina.com:7777/images/20181231/15.jpg" srcset="/img/loading.gif" alt=""></p><p><img src="https://pic.neko7ina.com:7777/images/20181231/16.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>山道间</i></center><br><br> </p><p>中途渐行渐歇，最终踏上了山顶。</p><p>此刻，太阳刚好从云层之间放出光辉。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/17.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>山顶</i></center><br><br> </p><p>说好的红枫，也没有辜负我们。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/18.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>枫叶</i></center><br><br> </p><p>到达山顶看完红枫，我们就准备下山了。</p><p>看着周边的田园风光，等待列车到来将我们带走。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/19.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>站台附近</i></center></p><h1 id="其他行动"><a href="#其他行动" class="headerlink" title="其他行动"></a>其他行动</h1><p>去看了蒙克展，逛了上野动物园。蒙克展除了那幅《呐喊》啥也不认识，动物园里熊猫前排队的人超级多，人气是真的高。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/20.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>门票两张</i></center><br><br> </p><p>上了新东京丸吃了一顿午餐，逛了一圈东京湾。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/21.jpg" srcset="/img/loading.gif" alt=""></p><p><img src="https://pic.neko7ina.com:7777/images/20181231/22.jpg" srcset="/img/loading.gif" alt=""></p><p><img src="https://pic.neko7ina.com:7777/images/20181231/23.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>新东京丸和东京湾</i></center><br><br> </p><p>看了天空树，以及天空树下的墨田水族馆。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/24.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>天空树</i></center><br><br> </p><p><img src="https://pic.neko7ina.com:7777/images/20181231/25.jpg" srcset="/img/loading.gif" alt=""></p><p><img src="https://pic.neko7ina.com:7777/images/20181231/26.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>墨田水族馆</i></center><br><br> </p><p>秋叶原广场表演的偶像组合。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/27.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>歌很好听</i></center><br><br> </p><p>疯狂的购物怎么能少的了呢？</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/28.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>黑妹与法爷</i></center><br><br> </p><p><img src="https://pic.neko7ina.com:7777/images/20181231/29.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>骑空士地盘</i></center><br><br> </p><p><img src="https://pic.neko7ina.com:7777/images/20181231/30.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>WOFF 里的 Tina，好大一个</i></center><br><br> </p><p><img src="https://pic.neko7ina.com:7777/images/20181231/31.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>去皮去伊</i></center><br><br> </p><p><img src="https://pic.neko7ina.com:7777/images/20181231/32.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>同事要的烟弹</i></center></p><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>我和朋友来之前定下的目标就非常的纯粹：街机，我自己又额外定下了中古这个目标。</p><p>虽然中间又爬高尾山又游东京湾，还逛了蒙克展提升了下艺术造诣，实际上这些时间加起来并不多。</p><p>每天起床第一件事就是去街机厅晨练，晚上回酒店前最后走出的场所也一定是街机厅。</p><p>一连 7 日，皆是如此。</p><p>搞的最后几天都有种如家门口般熟悉的错觉（笑）。</p><p>来日本这么玩的奇葩估计也就我们俩吧……</p><p>但是我，对于这种游玩方式，还是很满意的，并期待着下一次的——</p><p>日本之行。</p><p><img src="https://pic.neko7ina.com:7777/images/20181231/33.jpg" srcset="/img/loading.gif" alt=""></p><p><center><i>羽田机场看日落</i></center><br><br> </p><p>P.S. 日本回来之后就打算动笔写下这篇作为记录，没想到拖延症拖到了今天，还好没拖过 2019 年啊……</p>]]></content>
    
    
    
    <tags>
      
      <tag>旅行</tag>
      
      <tag>日本</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用 FCM 来推送 QQ 消息</title>
    <link href="undefinedffm.html"/>
    <url>ffm.html</url>
    
    <content type="html"><![CDATA[<p>月初买了个 iPhone SE，将辣鸡软件全部转移到 iOS 上之后，Android 的使用体验瞬间上升，不用忍受辣鸡国产软件的涂毒，还省了去镇压调教的功夫，续航也大幅提升，快哉快哉。</p><p>但是日常用的国产软件还有 QQ 和微信这两大流氓。微信还好，Play Store 上的版本只要关闭了后台就可以使用 FCM 来接收通知（虽然实现方式还是有点不老实），但是 QQ 就真没什么辙。</p><p>直到我找到了这个。</p><a id="more"></a><p><a href="https://github.com/RikkaApps/FCM-for-Mojo" target="_blank" rel="noopener">FCM for Mojo</a>，简称 FFM，由 Rikka 酱开发，借助 <a href="https://github.com/sjdy521/Mojo-Webqq" target="_blank" rel="noopener">Mojo-Webqq</a> 实现将 QQ 消息通过 FCM 推送至 Android 设备。 有了这个，就可以从 FCM 来接收 QQ 消息了。</p><p><strong>2018/12/19 更新：</strong></p><blockquote><p><strong>重要通知：WebQQ将在2019年1月1日停止服务，项目目前已停止维护，感谢大家四年来一路陪伴</strong></p></blockquote><p><strong>就到此为止了，留一张做最后的纪念，感谢开发者给我们带来了一段美好时光。</strong></p><p><img src="https://pic.neko7ina.com:7777/images/20180731/8.png" srcset="/img/loading.gif" width="37%"></p><p><strong>2018/10/30 更新：增加可选工作，提供 HTTP 基本认证、HTTPS 及 Nginx 配置部分内容。</strong></p><h1 id="配置服务端"><a href="#配置服务端" class="headerlink" title="配置服务端"></a>配置服务端</h1><h2 id="安装相关依赖"><a href="#安装相关依赖" class="headerlink" title="安装相关依赖"></a>安装相关依赖</h2><p>笔者所使用的系统是 Ubuntu 16.04 LTS。</p><p>git：使用包管理器来安装。</p><pre><code class="bash">apt-get install git</code></pre><p>Node.js：版本看自己喜好选择。</p><pre><code class="bash">curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -sudo apt-get install -y nodejs</code></pre><p>Mojo-Webqq：项目推荐使用 <a href="https://metacpan.org/pod/distribution/App-cpanminus/bin/cpanm" target="_blank" rel="noopener">cpanm</a>  在线安装或升级模块。</p><pre><code class="bash">curl -kL https://cpanmin.us | perl - App::cpanminuscpanm Mojo::Webqqcpanm Webqq::Encryption</code></pre><p>如要更新只需再执行 <code>cpanm Mojo::Webqq</code> 即可。</p><h2 id="安装-FCM-for-Mojo-服务端"><a href="#安装-FCM-for-Mojo-服务端" class="headerlink" title="安装 FCM for Mojo 服务端"></a>安装 FCM for Mojo 服务端</h2><pre><code class="bash">cdgit clone https://github.com/RikkaApps/FCM-for-Mojo-Server.gitcd FCM-for-Mojo-Servercp config.example.js config.jsnpm install</code></pre><p>如要更新，关闭当前正在运行的 FFM 并进入 <code>FCM-for-Mojo-Server</code> 目录执行以下命令。</p><pre><code class="bash">git pullnpm install</code></pre><h1 id="配置客户端"><a href="#配置客户端" class="headerlink" title="配置客户端"></a>配置客户端</h1><p>前往 Play Store 下载安装 <a href="https://play.google.com/store/apps/details?id=moe.shizuku.fcmformojo" target="_blank" rel="noopener">Android 客户端</a>。</p><p><img src="https://pic.neko7ina.com:7777/images/20180731/1.png" srcset="/img/loading.gif" width="37%"></p><p>点击 <code>服务器设置</code>，在 <code>服务器 URL</code> 处填写服务端地址，默认端口 <code>5005</code>，写成 <code>http://w.x.y.z:5005/</code> 形式即可。</p><p><img src="https://pic.neko7ina.com:7777/images/20180731/2.png" srcset="/img/loading.gif" width="37%"></p><p>点击 <code>管理设备</code> 点击加号将当前设备加入管理列表，再点击右侧上传云端保存。</p><p><img src="https://pic.neko7ina.com:7777/images/20180731/3.png" srcset="/img/loading.gif" width="37%"></p><p>返回主界面点击 <code>账号设置</code> 将自己的账号密码填入其中。账号密码登录现已失效，但是如要实现某些特性还要填写账号密码，详情请看 <a href="https://github.com/sjdy521/Mojo-Webqq/issues/183" target="_blank" rel="noopener">这里</a>。</p><p>FFM 服务端默认使用明文保存密码，如果介意上面的链接中也提及了解决办法。</p><p><img src="https://pic.neko7ina.com:7777/images/20180731/4.png" srcset="/img/loading.gif" width="37%"></p><p>最后进入 <code>通知设置</code> 做最后修改。<code>获取前台应用方式</code> 如没有 root，则选择 <code>使用情况访问</code>，否则可以搭配 <a href="https://play.google.com/store/apps/details?id=moe.shizuku.privileged.api&amp;hl=zh" target="_blank" rel="noopener">Shizuku Manager</a> 的 root 模式选择 <code>Shizuku</code> 使用。</p><p><img src="https://pic.neko7ina.com:7777/images/20180731/5.png" srcset="/img/loading.gif" width="37%"></p><h1 id="测试使用"><a href="#测试使用" class="headerlink" title="测试使用"></a>测试使用</h1><p>服务端进入 <code>FCM-for-Mojo-Server</code> 目录，启动服务端。</p><pre><code class="bash">npm start</code></pre><p>如设置无误，手机上会收到通知并自动从服务端下载登录二维码，打开 QQ 选择扫码，点击相册从手机中选择刚下载的二维码，确认登录即可完成。</p><p><img src="https://pic.neko7ina.com:7777/images/20180731/6.png" srcset="/img/loading.gif" width="37%"></p><p>现在就可以通过 FCM 来接收你的 QQ 消息了，顺便去系统设置中把 QQ 的后台给关闭掉。</p><h1 id="作为服务启动"><a href="#作为服务启动" class="headerlink" title="作为服务启动"></a>作为服务启动</h1><pre><code class="bash">vim /lib/systemd/system/ffm.service</code></pre><pre><code>[Unit]Description=a server for FCM-for-Mojo-ServerAfter=network.target[Service]Type=simpleUser=rootWorkingDirectory=/root/FCM-for-Mojo-ServerExecStart=/usr/bin/npm startPrivateTmp=trueRestart=on-failure[Install]WantedBy=multi-user.target</code></pre><pre><code class="bash">systemctl enable ffmsystemctl start ffm</code></pre><p>现在就可以通过服务来控制 FFM 了。</p><h1 id="可选工作"><a href="#可选工作" class="headerlink" title="可选工作"></a>可选工作</h1><h2 id="HTTP-基本认证"><a href="#HTTP-基本认证" class="headerlink" title="HTTP 基本认证"></a>HTTP 基本认证</h2><p>HTTP 基本认证由 <a href="https://github.com/http-auth/http-auth" target="_blank" rel="noopener">http-auth</a> 实现，这里只使用最简单的方法。</p><p>生成密码文件</p><pre><code class="bash">htpasswd -c -s /root/FCM-for-Mojo-Server/ffm_auth username</code></pre><p>输入2次密码之后，文件就生成在 FFM 服务端目录。编辑 <code>config.js</code>，找到 <code>basic_auth</code> 那段去掉注释（<code>/*</code> 和 <code>*/</code>）并写上密码文件的路径：</p><pre><code class="js">    &quot;basic_auth&quot;: {        &quot;file&quot;: &quot;/root/FCM-for-Mojo-Server/ffm_auth&quot;    },</code></pre><h2 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h2><p>HTTPS 通过 <a href="https://nodejs.org/dist/latest/docs/api/https.html" target="_blank" rel="noopener">https 模块</a> 实现，这里只使用最简单的方法。</p><p>编辑 <code>config.js</code>，找到有 <code>https</code> 那段去掉附近的注释（<code>/*</code> 和 <code>*/</code>）：</p><pre><code class="js">    &quot;https&quot;: {        &quot;key&quot;: fs.readFileSync(&quot;/etc/nginx/ssl/neko7ina.com.key&quot;),        &quot;ca&quot;: fs.readFileSync(&quot;/etc/nginx/ssl/ca.cer&quot;),        &quot;cert&quot;: fs.readFileSync(&quot;/etc/nginx/ssl/fullchain.cer&quot;)    }</code></pre><p>证书可以使用 <a href="https://acme.sh" target="_blank" rel="noopener">acme.sh</a> 很方便地进行申请，现在支持泛域名证书的申请，在稍后的 Nginx 的配置中可以分配一个单独的二级域名给 FFM 使用。</p><h2 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h2><p>在 <code>/etc/nginx/conf.d</code> 中创建一个新的文件 <code>ffm.conf</code> 并写上如下配置：</p><pre><code class="nginx">server {    listen 80;    server_name ffm.neko7ina.com;    return 301 https://ffm.neko7ina.com$request_uri;}server {    listen 443 ssl;    root /var/www/ffm;    access_log  /var/log/nginx/ffm_access.log;    ssl_certificate /etc/nginx/ssl/fullchain.cer;    ssl_certificate_key /etc/nginx/ssl/neko7ina.com.key;    ssl_session_timeout 1d;    ssl_session_cache shared:SSL:50m;    ssl_session_tickets off;    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    add_header Strict-Transport-Security max-age=15768000;    ssl_stapling on;    ssl_stapling_verify on;    location / {        proxy_pass https://127.0.0.1:5005/;        proxy_redirect off;        proxy_set_header Host $host;        proxy_set_header X-Real-IP $remote_addr;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        auth_basic &quot;FCM for Mojo&quot;;        auth_basic_user_file /root/FCM-for-Mojo-Server/ffm_auth;       }}</code></pre><pre><code class="bash">nginx -tnginx -s reload</code></pre><p>最后修改一下客户端上的 <code>服务器配置</code>，将新的 URL 以及登录信息填写进去即可。</p><p><img src="https://pic.neko7ina.com:7777/images/20180731/7.png" srcset="/img/loading.gif" width="37%"></p><h1 id="收尾工作"><a href="#收尾工作" class="headerlink" title="收尾工作"></a>收尾工作</h1><p>最后换一个简洁版本的 QQ，比如 <a href="https://play.google.com/store/apps/details?id=com.tencent.mobileqqi&amp;hl=zh" target="_blank" rel="noopener">QQ 国际版</a>，并关掉其后台权限及通知权限。</p><p>现在，在别的 IM 软件上能够享受的 Android 通知新特性，也可以在 QQ 上享受的到了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>折腾</tag>
      
      <tag>Android</tag>
      
      <tag>FFM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>宝剑锋从磨砺出，梅花香自苦寒来——PS4《战神》游感</title>
    <link href="undefinednew-god-of-war.html"/>
    <url>new-god-of-war.html</url>
    
    <content type="html"><![CDATA[<!-- ![](https://pic.neko7ina.com:7777/images/20180522/1.jpg) --><p>自 PlayStation 4 发售至今，每每各种大小型游戏展或发布会来临之际，人们都会猜测索尼会有什么惊喜带给大家。</p><p>《战神》，始终位列预测名单之一的系列，新作在今年 4 月 20 日正式发售。</p><p>笔者收到游戏后，花了近一个月时间仔细地游玩游戏，感慨颇丰，想了想还是想要记录点什么，于是就有了这篇随笔。</p><a id="more"></a><font color="#DC143C">请注意，本文部分内容涉及剧透，请酌情食用。</font><h2 id="「船新」的战斗系统"><a href="#「船新」的战斗系统" class="headerlink" title="「船新」的战斗系统"></a>「船新」的战斗系统</h2><p>《战神》系列一直是以爽快暴力著称的线性动作游戏，上上个世代许多玩家将其与《忍者龙剑传》系列、《鬼泣》系列统称「三大动作游戏」，可见在玩家心目中地位之高。</p><p>游戏以线性流程为主，由战斗和解密组成，辅以精心设计的能力系统和简单直观的升级系统，游玩感受几乎都落在战斗部分，是不折不扣的动作游戏。</p><p>但五部作品后，圣莫尼卡大概是觉得《战神》的表现形式达到了瓶颈，想在其他方面寻求突破。</p><p>《战神：升天》，就是突破与妥协的产物。</p><p>该作评价一般，单人流程也不甚出彩，但是圣莫尼卡的新鲜尝试，大都集中在许多人没碰过的多人模式里——大到装备、属性系统引入，小到敌人攻击预警的设计，内容丰富让人觉得圣莫尼卡本就是做个多人联机游戏，配上一个单人流程而已。</p><p>或许为了规避过高的开发风险外加合理利用多年积累的资源，该作还是基于原有的表现形式，沿用了大量系列前作们的素材，让人感觉缺乏诚意。</p><p>但这个尝试可没有白费，PlayStation 4 的《战神》（为方便阅读，以下将以「新《战神》」来指代），在这个如日中天的平台上，没有了所有的顾及，新《战神》就在这个形式下应运而生。</p><p>本作与系列最大的区别就是镜头的运用，将之前系统控制镜头改为第三人称跟随视角或第一人称视角（在设置选项中切换），增加玩家的主观能动性。</p><p>因为镜头方式改变，游戏给到玩家信息的广度与深度不同，战斗系统重新设计，战斗风格也得以改变：两把武器三套战斗体系在各种场景互有优劣，弃用 MP 转用 CD 作为消耗单位的技能系统简洁明了，协力者系统补充牵制，加上引入装备、属性系统以及融合改良升级系统，新《战神》的战斗系统丰满充实、层次分明、多元多彩。</p><p>战斗围绕攻、防、闪、反的基本思路，扩展出击晕、吹飞、浮空、异常状态等解决方案，制作人所说「不希望玩家总是用『框框三角』来战斗」的问题也在本作中得到了完美解决——本作中并没有「框框三角」这么个招，且战斗本身就有许多应敌思路可供选择：吹飞敌人地形杀，打背快速晕眩处决，浮空连招到死，冻伤或麻痹敌人。每种敌人都有不止一种处理方式。</p><p>不过相较于战斗时的发挥，战前准备更为重要。装备和属性系统被引入，游戏玩法因此丰富，不同装备可以搭配出不同的属性流派，不论是高攻高防的刚猛战士，还是高符文高冷却的甩技能法师，都有自己的优缺点。</p><p>护身符装备就比较逆天，里面会有一些「完全改变游戏」的道具，比如闪避触发子弹时间，又或是增加盾反判定时长——前者会让笔者感觉在玩「猎天使猛男」，后者则是架起防御等敌人砍上都可触发防反，战斗体验相差可不是一点半点。</p><p>笔者初见游戏，不太确定各类素材的重要性及再生性，担心素材被滥用，几乎没怎么购买及升级装备来进行游戏。然而在新《战神》中，奎爷是有一个等级概念的，这个等级由当前装备及装备里镶嵌的咒术来决定。奎爷等级越高，敌人威胁性会越低，抛开血攻防的影响不谈，部分敌人的招式威胁性也会降低，如红色预警（不可防御或防反）降低为黄色预警（会被破防但可防反）甚至无预警（不会破防），装备系统的重要性可见一斑。</p><p>素材看起来虽多，但不可再生的重要素材在流程中都是有固定出处且数量给够，不会出现不小心用掉贵重素材导致神装无素材可升的情况。但当笔者认识到这点时，已经用 4 级的奎爷把主线流程基本打完了，上百次的死亡画面都是笔者的辛酸泪啊……</p><p>总的来说，新《战神》已经不像以前是个纯粹的动作游戏了，其他游戏类型元素的加入使得笔者在游玩时关注点不用全放在战斗本身——或者说也不能全放在战斗本身了。</p><h2 id="追求战神体验"><a href="#追求战神体验" class="headerlink" title="追求战神体验"></a>追求战神体验</h2><p>这次的难度设计与以往类似分为四个难度，前三个难度可以在游戏流程中切换，而最高难度「追求战神体验」游戏流程中无法切换，也没有多次战败的不可逆降低难度，想要更换难度必须重新开始游戏。</p><p>高难度的体现方式依旧是笔者不喜欢的那一类型。</p><p>虽然敌人的攻击欲望和 AI 都有加强，部分敌人招式在高难度下处理方法也有所差异，但是难度更多还是体现在敌人的血攻防上。这就使得笔者在装备和属性基本毕业时去打女武神王，还是像在打魂斗罗，HP 成了摆设，被抓到基本就没了。偏偏敌人血量还特别高，一场战斗时间被拉得很长，容错率极低，一旦失误就要重来，十分容易产生挫败、烦躁的情绪。</p><p>笔者更希望见到敌人配置上的变化、敌人配合上的变化以及敌人招数上的变化，正如硫酸脸在制作《忍者龙剑传》系列高难度的思路一样。万幸这样的战斗整个流程中没几场，整体体验尚佳。</p><p>不过越是高难度，作为老父亲越是能体验到「真战神」的强悍。儿子阿特柔斯射箭精准，升级路线廉价，装备简单实用，削弱牵制能力强悍。新《战神》中许多面对敌人数量多、招式麻烦、攻击欲望强的战斗场景时，笔者能够安然解决战斗，协力者儿子功不可没。</p><p>在回家取混沌双刀后的那场战斗，没有儿子让笔者四面楚歌举步维艰，真的只能感叹一声奎爷老了，「战神与他的老父亲」真是一点都不假。</p><p>制作人在游戏发售前曾言，本作的最高难度，玩家需要使出浑身解数，善用游戏里的每一个机制才能打通。这里的机制不仅局限于战斗系统中对招式、技能特性的理解，还要对游戏的等级、装备、属性系统有一个不错的把控及运作计划，但这在初次游玩是很难做到的。建议有意挑战最高难度的玩家，先将游戏的低难度打通一次，背背板熟悉下流程了解下招式特性，对游戏有个初步的理解和大致的掌控，会对最高难度的攻略有着不小帮助。</p><p>否则大概会和笔者一样，被一周目战神难度打的鼻青脸肿吧……</p><h2 id="一镜到底"><a href="#一镜到底" class="headerlink" title="一镜到底"></a>一镜到底</h2><p>全程一镜到底是发售前新《战神》在宣传上的一个重点，特别在游戏送交各路评测媒体后，几乎所有评测媒体对游戏全程一镜到底的设计赞不绝口。那么全程一镜到底究竟是什么？</p><p>不严谨地说，全程一镜到底就是在游戏的过程中，全程只使用一个机位收录游戏信息传达给玩家。</p><p>在新《战神》发售前，有过一些游戏在部分过场和演算中使用一镜到底。但全程使用的，新《战神》还是头一家。</p><p>在主线流程特别是涉及到演算时，一镜到底的特殊展示魅力还是让笔者感觉到惊艳的。被陌生人打飞时镜头仿佛跑动着追过去，通常游戏会切换到奎爷背后某个机位，按指定路线移动展示奎爷挣扎站起来的背影，对比之下自然对前者大感新鲜。</p><p>但是为了一镜到底，游戏在其他地方也给这个设计买了单。</p><p>举个例子，游戏在流程中会使用传送门进行移动，大部分这种场景会面临加载目的地场景的任务，那么一般游戏会用「传送开始——载入——传送结束」，根据载入时间长短来决定如何处理视觉效果。如果载入很快，可能会拉长传送开始和结束的演示时间，画面一闪进行切换；载入慢的可以简单粗暴直接转到 Loading 页面，显示点 Tips 或者目前进度打发时间。</p><p>新《战神》不可能直接载入很快，但是又没镜头可切，那要怎么解决这个问题呢？</p><p>很简单，制造一个临时过渡的场景，来间接处理载入的问题。</p><p>于是在游戏里，我们见到奎爷「激活传送门——选择目的地——踏入光门——来到过渡场景——出现光门——再次踏入光门——出现在目标地点」，实际上游戏是用「加载过渡场景——进入过渡场景——加载目标场景——离开过渡场景」的方式来处理传送。</p><p>游戏巧妙地利用人眼被强光直射一片白看不清的现象，在进入光门的一瞬间切换，模拟眼睛经过强光后渐渐可视的视觉效果，保证了一镜到底的设计。</p><p>过渡场景在游戏设定中还被赋予了重要地位，填充大量对话及演出，让玩家注意力放在内容上。场景加载完成后，还要等重要演出结束，才会出现光门，不会遗漏关键信息。</p><p>这一切都让玩家感觉不出这个小小场景是为了解决传送问题而存在的，设计把控上的精妙令人叹服。</p><p>不过先天硬伤是没有办法完全弥补的。游戏主线流程完结之后，演算几乎就没有了。一镜到底的优势无法体现，还要在传送之类的地方减分，以及被死亡画面中断——死亡是没法一镜到底的，必须要切换画面载入到死亡之前的检查点，而在最高难度下死起来简直是家常便饭。</p><p>所以，全程一镜到底的魅力，笔者只在些许时候能够感受的到，相对整个游戏的时间，占比还是太少了。</p><h2 id="父与子"><a href="#父与子" class="headerlink" title="父与子"></a>父与子</h2><p>希腊世界发生的故事，如果要抓出一个关键词，那这个词一定是「复仇」；如果要用一个词来描述新《战神》中的故事，笔者觉得这个词应该是「成长」。</p><p>一个学会战斗，学会生存；另一个学会担当，学会面对。他们都学会做神，更学会做人。这是一个儿子在成长，父亲也在成长的故事。</p><p>奎爷的形象转变让笔者还是有点惊喜的，剧情上对家庭和亲情的重视程度实属系列之最。虽然奎爷的家庭之前也被多次描述过，老老父亲宙斯不说，母亲老婆女儿和兄弟都有出场过，但更像是为了补全奎爷的战斗动机，以柔情衬托铁血。新《战神》的父子情笔墨浓重，家庭中各种微妙气氛更显，外界的矛盾、冲突与斗争更像是配角，来催化驱动父子间的感情。</p><p>当然老父亲也不会真的老实憨厚，偶尔只言片语还是让人回想起那个一手覆灭希腊世界的男人。反倒是儿子性情大变那段让笔者觉得有些突兀，即使打完所有了内容再回过头来回味这段，依旧觉得没有足够的铺垫来支撑，对奎爷的变化倒是越来越能理解。个人感觉剧本上还有些不足。</p><p>值得一提的是在拿到密米尔这个腰挂式收音机后，战斗不仅有了身后预警，赶路、划船、传送时更可以收听「北欧八卦小电台」，了解北欧世界中大大小小的事情。这些小故事，也让笔者更进一步认识到新《战神》的世界观设定，绝对不容错过！</p><h2 id="传承与前行"><a href="#传承与前行" class="headerlink" title="传承与前行"></a>传承与前行</h2><p>新《战神》不论是在人物塑造、剧情策划、系统设计上，都做出了极大的革新。但在游玩过程中体味到的细枝末节，又将新《战神》与系列以往的《战神》系在一起。</p><p>这种新鲜与熟悉的矛盾感，不禁让笔者回忆起第一次玩《银河战士 Prime》时的感觉。</p><p>本作重新回归系列初始标题，或许也有着回归原点、开拓创新的意味吧。这份答卷，笔者是相当满意的。</p><p>虽然游戏有着镜头迷之移动导致笔者枉死、各种为了收集而收集的收集要素、素材繁杂拉高装备系统门槛、检查点设置不人性化、游戏中 BUG 等各种问题，但瑕不掩瑜，无法掩盖新《战神》熠熠闪烁的光彩。</p><p>已经等不及要玩下一作了！</p>]]></content>
    
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>PlayStation</tag>
      
      <tag>PS4</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>杀手七先生</title>
    <link href="undefinedmisster-seven.html"/>
    <url>misster-seven.html</url>
    
    <content type="html"><![CDATA[<p>深深地吸了一口烟卷，吐出一串烟圈。我眯着眼睛，右手大拇指拨了拨短刃刀锋，冰凉寒意窜上手指。</p><p>刀，依旧锐利。</p><p>满意地将刀收入刀鞘，插回腰间，检查工作在此刻宣告全部完成。我走回桌前，伸手拿起那份已被打开的信件，扫了一眼，随即信手扔进壁炉中。</p><p>炉中温暖柔和的火焰将信件缓缓吞噬，只有一角还能看得清，上面写着一个落款——奥斯丁。</p><a id="more"></a><p>我是一名杀手。</p><p>自我记事起，就已经在组织接受训练。从七岁时完成第一个正式任务起，工作到现在，已有三十余年。杀的人也数不清，甚至连自己的名字都不太记得。不论是谁，一般都称呼我为——</p><p>七先生。</p><p>在组织没有任务分派的时候，我也会自己接一些。但在最近接到的邀请中，有一份来自一个完全没听说过的偏远小镇，酬劳之高却远远甩开纽约等大城市的水准。考虑再三之后，我决定接下这个任务。</p><p>多年的经验，使我在出门前都会仔细检查一遍我的家伙。得益于此，好几次的生死攸关之境，我都挺了过来。</p><p>一切准备就绪，看了看挂钟，是时候出发了。将几处机关的保险打开，我推开家门，迅速没入人群，直奔火车站。那里将会驶来一辆单向行驶的火车，沿途经过的一站是我的目的地。</p><p>奥利托里。</p><h1 id="一"><a href="#一" class="headerlink" title="一"></a>一</h1><p>列车缓缓地前行中，窗外只看得见漫无边际的黄沙地面和恶劣的沙尘暴——当然，你得忽略黄沙地上高矮不一的灌木丛。</p><p>视线收回，我的注意力放回到了车厢内。这次的火车除开我，另外就只有五个人在这列车上。出于职业习惯，上车时短短的走动时间，我就将这五位看了个大概。</p><p>一位金色卷发身着华丽服饰的贵妇，手拉着一个穿着皮装褐色发辫的小女孩小声交谈着，小女孩看上去娇小可爱。其后一排座位上坐着一位穿着普通的棕发青年男子，身侧竖靠着一块画板，旁边蹲坐着一只看不出品种的大型犬，正在扫望着四周。隔几排是一位身着医生服饰的黑发中年男子，面前放着土黄色旅行箱，这人大概是个医生，里面放的是医疗器具吧。再隔几排躺坐着一位衣衫不整的金发青年男子，倚靠在座位靠背上，手中把玩着一根烟卷，嘴角挂着一抹若有若无的微笑，气质不俗，不像表面看上去那么简单。</p><p>我，坐在最后的一排，角落里。</p><p>行驶途中，金发男子起身搭话，打破了车厢的宁静，前方那五人仿佛被那搭话给扭结在了一起，开始交流起来。</p><p>我摆摆手拒绝了中途金发男子向我递来的烟卷，咳嗽了两声表示身体不舒服，便闭眼不在理会——身为一名杀手，要随时保证自身良好的状态。但从隐隐传来的交谈声中，我发现这几位也是和我去一样的地方，心中微微诧异，暗暗加深对这五位的印象。</p><p>小插曲结束之后，列车很快就驶达了奥利托里。漫天呼啸的风沙，将我的身形隐去，跟随着走在前面的众人，来到了车站外。一眼望过去，能引起注意的除了一辆越野车，及车前身着警服的红发青年。</p><p>他迎着走在前面的众人而去，依次问候。原来他就是奥斯丁，写信邀请我的人，但我同时也发现火车上其他五人也都是他邀请而来，这就有点耐人寻味。</p><p>奥斯丁邀请我，是为了要杀一个人，对象在信中没有细说，只谈及了此次任务的报酬。如果接受，在来到奥利托里后，找个机会见面，他将会告诉我这次猎杀的目标是谁。但眼下，明显不是一个见面的时机。我皱了皱眉头，打算暂且离去，等寻觅一个合适的时机单独交流。</p><p>漫天黄沙依旧飞舞，借着风沙隐匿身形的我正要悄悄离开，空中飘来奥斯丁的话语，让我打消了这个念头。奥利托里小镇距离这个车站有很远的距离，中途除了一个加油站外便再无人烟，如果我要自行前往，很容易迷失方向。权衡之下，趁着奥斯丁寻我之际，我从风沙中走出，来到了奥斯丁的面前。</p><p>「噢，七先生，您的到来真是让我感到荣幸！」</p><p>奥斯丁深深地鞠了一躬，向我表达了他的敬意。</p><p>我向他点了点头，并未言语。奥斯丁笑笑也没恼，引着我们上了越野车。</p><p>越野车内没有窗户，黑漆漆一片。除了一位在副驾驶座，其余人与我一同在后座，没有一个人说话，只有风沙刮擦车子的声音、引擎声以及轮胎崩飞石子的声音在车内回荡。</p><p>行驶了大半个小时，车停住了，我们一行人都下了车，发现身处奥斯丁所说的加油站。奥斯丁表示车加完油需要一段时间，大家可以稍作休息，说完便打算去一旁抽烟。金发男子也跟了过去，我则是围着车绕了几圈，简单检查了一下，并未发现异样，心中嘲笑自己现在做这个事情是不是有点马后炮，打算先一步坐回车内稍作休息。但这时，远处发生的事情，让我不得不停止脚步。</p><p>奥斯丁倒在沙地里，一动不动。医生双手托抱着火车上贵妇拉着的小女孩向我们走来，小女孩双眼紧闭，脸色苍白，瑟瑟发抖蜷缩在医生怀中，在他靠近华服贵妇时突然像找到主心骨一般扑进了贵妇怀中，死死抓住不肯放开。</p><p>人群似乎起了争执，但这并不是我关心的。趁着众人激烈争吵之际，我绕到奥斯丁身前，眉头紧紧皱起。</p><p>奥斯丁，死了。</p><p>我蹲下身，伸手在奥斯丁身上打算翻找一些物件，右手无名指无意中触碰到奥斯丁身上的血液，顿时一股钻心的疼痛直冲脑门，逼得我倒吸几口凉气。</p><p>真是太他妈的痛了！</p><p>缓过气来，我才发现那根无名指严重灼伤，指肚上一大块皮肉不见，留下一个焦黑的不规则空洞。</p><p>但是眼下并不是关心手指的时候，我忍着剧痛打算再小心地探查奥斯丁的尸体时，身后之前争吵的众人已经走了过来，我只能站起身来退到一旁。贵妇用着阳伞将奥斯丁的衣服挑开，众人一顿检查，一无所获，但并没有纠结奥斯丁的死亡，反而在商讨如何处理奥斯丁的尸体。</p><p>这也太奇怪了，这五个人有点反常。</p><p>想到如此的我，正打算悄悄退去，突然一股莫名的思绪，让我在众人面前开口：</p><p>「烧了他。」</p><p>众人诧异地看着我，仿佛听到了不敢相信的话语。然而我坚定的复述，让他们知道自己没有听错。表决一番之后，支持烧了他的人占多数，不忍观看的医生拉着疑似画师的棕发青年先行走开，贵妇抱着小女孩回到车上，金发男子在点了一根烟之后将打火机递给我了，也转身走向越野车，此刻这片空间，就只剩下我与奥斯丁的尸体。</p><p>虽然说出这话来我自己现在都还在诧异，但是决定了的事情我不会改变。从旁边的灌木丛上拉了几堆干草扔到尸体上，试图点燃干草，却屡次被狂风熄灭。想了想，我又从旁边的加油站弄了点汽油，火终于是点着了，熊熊大火直窜天空，吞噬了奥斯丁的尸体。高涨的火焰中似乎有什么东西在舞动，但当我定睛细看时，直到火焰近乎熄灭，都没再发现任何东西。</p><p>可能是错觉。</p><p>星星点点的火苗在风中摇曳，确认尸体烧尽，我打算回到车上时，发现灰烬中，一丝金光若隐若现。想了想，伸手拿起那件东西，入手一阵冰凉。</p><p>这是一块金色纹章，边缘在阳光照射下炫着金晕，外圈花纹繁杂，中心刻着蛇图腾一类的图案，不似凡品。我想了想，不动神色地将纹章收入包内，转身快步回到越野车上。</p><p>车又开始向奥利托里驶去，只是车上少了一个人。</p><h1 id="二"><a href="#二" class="headerlink" title="二"></a>二</h1><p>车驶到奥利托里小镇的入口处停下了。</p><p>下车后，我悄悄离去，没有引起任何人的注意。</p><p>我终于抵达了奥利托里，但是却不知目标是谁，发布任务的奥斯丁也死在了加油站外。其实委托人没有说出目标，严格来说契约并不算达成，我也可以直接离开，但是身为一个专业杀手，我要维护我的尊严。那么，我就靠我自己来找出目标吧。</p><p>花费了一些时间，在小镇中到处转了一番，对于小镇的结构，也有了一个基本了解。这个奥利托里小镇结构相当简单，除了小镇中心的集市，小镇西边的医院——虽然那医院看起来十分破败，小镇南边的旅馆，小镇东边靠近小镇入口的警察局，剩下的便全都是民居了。做完这个事情时，我刚好处在城镇中心的集市，想着往人多的地方探一探能得到很多有用的信息，我迈步走进了集市。</p><p>集市十分热闹，商铺和流动摊点摆满了商品，顾客围在店前，和老板言语激烈着，整个集市里人群熙熙攘攘，刮擦碰挤显得稀疏平常。我缓步走在集市中，尽可能避让会产生的肢体碰撞，挤过一圈人群，前方突然开阔了起来。</p><p>场地中，堪堪搭着一顶惨白色帐篷，帐篷前的人排着长长的队伍，似乎在等待什么。场边围着的人群也是一脸虔诚地盯着帐篷，不过藏身在黑色大斗篷下看不清表情的那些人我就不太确定了——从调查奥利托里结构时，我就发现这个小镇上有很多这样的人，黑袍罩身，低头垂目，可能是某个奇怪的宗教。试图辨识是何种宗教，但记忆中又没有对的上的，想到眼下还有更重要的事情，便将这事暂且搁下，优先调查小镇，没想此刻记忆又被这群人再度勾起。</p><p>不过还没等我陷入思考，人群中突然的骚动引起了我的注意。抬眼望去，惨白的帐篷被一只枯槁的手掀开，一位个子很矮的驼背老人拄着杖子慢步走出，全身皮包骨头，脸窝深陷，面无表情，乍看之下犹如骷髅。</p><p>眼看老人出现，广场之上人群骚动更烈，老者伸出双手缓缓下压，这一片场地又瞬间静谧无声，只听得到人群外原本属于集市的市侩声响。</p><p>老者做完动作，便席地坐下，排成长龙的队伍，隐隐有种复苏的迹象，开始向前缓缓蠕动。每有一位来到面前，老者便取出一颗色彩鲜艳的药丸，交予对方，周围人群这一刻露出毫不掩饰的狂热眼神。而这一切，都被我一一摄入眼中。</p><p>这个药丸，有古怪。</p><p>不过目前这和我的任务无关，想到我还要找出任务目标，打算就此离开时，又一抹莫名意念闪过，我鬼使神差地站进了队伍里，随着人群缓缓移动，来到了老者的面前，老者脸上第一次出现了表情。</p><p>「年轻人，你好，奥利托里已经很久没有外乡人了。」</p><p>意味深长的话语将我惊醒，片刻间我了解了现在的处境，脸上没有异样露出，和老者交谈起来，寻了一个由头应付了一下，打算结束谈话就此离开。</p><p>但老者突然拉住我的手，放上了一颗药丸，压低声音吐了几个字，便不再理会我，继续去给队伍派发药丸。</p><p>我拿着药丸挤开人群，往集市之外走去，却发现不知何时我的背包已被拉开。检查一番发现，包内物品甩棍、十字弩等，还有从尸体灰烬中取到的那枚纹章，全都消失不见。</p><p>责怪自己大意之余，也庆幸重要的东西一直都是贴身存放。虽然那枚纹章丢失比较可惜，但是和本次任务应该没什么关系，也没有过多去在意。反而老者吐出的那几个字，让我陷入了思考。</p><p>「奥利托里，从来都不欢迎外乡人……」</p><h1 id="三"><a href="#三" class="headerlink" title="三"></a>三</h1><p>虽已不是正午，但头上的阳光依旧炙热，额头上渗出的汗水，顺着脸颊流进了领口。我抬头望了望骄阳，双眼眯起，确认了一下方位，向小镇的旅馆走去。</p><p>转弯走上一条街道，街道两旁家家户户的门大多开着。随便走到一家门前，停住稍稍确认了一下——应该没人，想了想，侧身挤进屋子。</p><p>屋子是很简单的单层结构，一眼望去一览无余没有障碍，家里有着桌子、椅子、柜子、床等一般家居摆设，看起来和一间普通民居并无区别——除了屋子里能放东西的地方，都放满了肉、水果等食物之外。</p><p>这家食物储备有点多的过分了。</p><p>简单确认了一下，食物都很新鲜，没什么问题，随手拿起就吃了起来，我从下了火车到现在，还粒米未进。包刚才被扒了，现在很空，万一晚上连夜调查，储备一下食物能支撑更久。这样想着，我挑选着食物，放进背包内。当杀手这么多年了，这种小节我早就不拘了。</p><p>装完我在屋内转了转，这家除了吃的很多之外，就没什么有用的信息了。推门打算离开时，发现远方有两个黑袍人往我这个方向走来。他们同时也看到了我，骂骂咧咧一声跑了起来，直奔我而来。我见已经被发现了，干脆也不急着逃走，好整以暇等待他们过来。</p><p>「嗨，你是谁，怎么从我们家里出来？」</p><p>身材较矮的黑袍人还没走近就开口，边走边说，走到面前刚好问完。</p><p>我正打算开口，却在这时看到，抬起头的黑袍人，面色土黄，毛发干枯，两个眼眶中瞳孔竖立，根本不是人类该有的眼睛。</p><p>我随口敷衍了几句，矮个黑袍人忽然想到什么，急忙让他的同伴进屋。不一会，同伴急急走出，和矮个子说了什么，他瞬间大怒，出脚向我踢来。距离太近，又是暴起出手，我一时不防被踢个踉跄。心下了然，面上装作无赖流氓一般对其破口大骂，放肆离去。转身瞬间，眼角余光扫了眼那位跑动急促的同伴，黑袍在奔跑中掀起，露出了里面的面容。</p><p>这人，竟然也是竖瞳。</p><p>虽然从两人身上感觉不出威胁，但是异样的瞳孔还是让我有些警觉。装腔作势离开之后，我加快前往旅馆的脚步，我需要一个地方让我好好整理一下信息和思绪，以便制定下一步的计划。</p><p>又走了十来分钟，我来到了小镇西边。作为奥利托里唯一的一个旅馆，并没有特别高级，只有两层，墙体上纵横了好几条大大小小的裂缝，看起来很久没有保养过了。缓步迈入旅馆，一层大厅有许多桌凳还有一张大大的吧台，人声鼎沸，喝酒的、吃东西的、玩牌玩骰子的什么人都有，当然也有看不见里面身形的黑袍人。</p><p>目光四处游动打算寻找一处座位，却发现之前的金发男子坐在其中一桌，正在和当地人玩些什么，身上那身衣服也换成了一身破破烂烂的当地人服装。在我看向他时他也看到了我，喜笑颜开地向我招了招手，我靠了过去，两人找了个角落坐下。</p><p>气质不俗的这家伙竟然是个赌徒！刚来就和当地人赌博，结果赌得裤子都——哦，是全身都输干净了，只剩得一身别人施舍的穷人服装，回去的车票钱也没有，正在向我借钱呢。我也没在乎，答应了下来，他眼看有了回去有了着落，说了些到了奥利托里之后他们一起发生的事情，便又到一旁和人玩起来。</p><p>角度桌子上只有我一个人坐着，我把从下火车到刚才所有的事情都理了理，却没有理出一个头绪。不过刚才赌徒告诉我的信息中，警察局局长貌似不简单，奥斯丁好像是这个局长手下的得力干将，说不定这次邀请可能就是他授的意；即使不是，以我的身手，也能全身而退。</p><p>想到有这么个机会可以确认目标，我走出酒店。夕阳西下，面前的影子越拉越长，指引我着走向奥利托里的东侧——警察局。</p><h1 id="四"><a href="#四" class="headerlink" title="四"></a>四</h1><p>夜幕降临，我站立在警察局的门口。</p><p>看着警局较为严实的结构，我眉头轻蹙，这样想偷偷溜进去几乎是不可能的。正犹豫是不是要以报警为借口进入警局的时候，突然一只手悄无声息地拍在了我的肩头，骇然转身，发现一个大腹便便的警官在对我微笑。</p><p>我竟然没察觉出这个人！</p><p>退后一步拉开距离，不动声色地甩开肩膀上肥腻的手掌。胖子警官并不在意，满脸堆笑地对着我说：</p><p>「您好，我是奥利托里的警察局局长肖恩，请问您有什么需要帮助的？」</p><p>男子简单的话语中表露了令人无法相信的信息——这个胖子竟然是警察局局长？不过刚好是我要找的人，想到这里，就把之前的借口顺势说出。</p><p>「您好，我刚来到这里。但是在集市上，我的包被人偷了，所以我想来报案，希望你们能帮我找回我的东西。」</p><p>话音刚落，面前的胖子双眼好似迸发金光，脸上的笑容更甚，不知何时拉住我的手不放。</p><p>「哈哈，奥利托里是不会允许任何犯罪的。您请说，我们一定会帮您把犯人揪出来！」</p><p>「请问，您这有可以长谈的地方吗？我觉得三言两语可能说不清。」</p><p>想了想外面不是说话的地方，向肖恩局长提议进去详谈。局长点了点头，转身拉着我向警局走去，突然好像才发现拉着有些不妥，撒开抓住我的手向我笑了笑，才继续迈开脚步。</p><p>跟着局长走进会客室，寻了个椅子坐下。肖恩局长泡了一杯热茶，关上房门将茶放到我面前，拉开另一张椅子坐下。</p><p>「现在，您可以说说您需要找回哪些东西？」</p><p>肖恩局长微笑依旧。而我在确认会客室暂时密闭之后，对肖恩局长的问题没有回答，反而问了他一个问题：</p><p>「请问局长，奥斯丁您认识吗？」</p><p>「哦？他是我的一名得力下手，你认识他？」不知道是不是错觉，肖恩局长的笑容露出一丝诡异。</p><p>「奥斯丁邀请我来完成一件事情，是您吩咐的吗？」我开门见山，没有任何废话。</p><p>肖恩局长却先询问起奥斯丁在哪，没有正面回答我的问题。我考虑了下不会影响任务，将加油站的事情未做隐瞒地向局长说出。</p><p>肖恩局长突然一副了然的神色，继而保持那个诡异的笑容对我说：</p><p>「奥斯丁要你做什么并不重要。现在我这边有一件事委托你去做，你做不做？」</p><p>出人意料一番话语，让我没有获得我想要的信息。神色告诉我他知道，但言语上又没有承认。没有关心奥斯丁的死亡，反而抛出另一个委托，怎么都觉得很诡异。</p><p>既然没有承认，那么还是需要调查一下奥斯丁的真正目的。接受警察局局长的委托，如果有什么事情报过来，他也会帮我压下，待我查明目的，也无需去管局长的委托。斟酌了一下利弊，我佯装答应了他。</p><p>「好，我同意。」</p><p>话音刚落，门窗紧闭的会客室突生一股邪风吹向了我的后背，那一刹那我整个人失去了意识。朦朦胧胧之间，感觉黑暗中有看不见的东西在蠕动，四面八方嗡嗡声向我袭来，最终在脑海内拼成了几个字节——伊格。</p><p>突然惊醒，睁开眼看到，肖恩局长依旧像之前那样坐在那儿，笑容诡异地看着我，一切好像只是一瞬间的事情。我定了定神，暗叹今天的错觉有点多，向局长开口，要求帮我找回我丢失的东西。</p><p>肖恩局长未做回答，推开椅子起身，从怀里掏出一个物件向我抛来，便从会客室踏门而出。我接住他抛来的东西——是一把精致的手枪，触摸上去仿佛就能感觉到它惊人的威力。稍稍体会了个中意味，将手枪收好，跟着离开会客室。</p><p>只是这时我没发现，桌上那杯还没动的热茶，此刻已经凉透了。</p><p>即将踏出警局大门，我突然想到什么，回头看了看大厅内的钟，上面指针赫然告诉我现在的时间是——晚上 12 点。我愣住了，但还未来得及怀疑钟是否出问题，多年的直觉告诉我，有人在监视我！下意识之间，身形闪动来到阴影处，快步离开警局门口。</p><p>该死，刚才应该向肖恩局长问一下奥斯丁的住处，里面应该会找到我想要的信息。但是会议室里的诡异感觉，十分明确的告诉我折回去问不是一个好注意，加上暗中又有人在监视那里，稍作思考，我迈步向西边走去。</p><h1 id="五"><a href="#五" class="headerlink" title="五"></a>五</h1><p>从警局走出，监视的目光下隐匿，刺在背上的监视感也随之消失，心神放松下来，感到一阵轻松。</p><p>这种轻松我从未感觉过，甚至有一种多年从事杀手工作积压下的负面情绪，都被清扫而空，不复存在。</p><p>「怎么可能！」我在心中对自己自嘲。</p><p>如果不是今天发生的事情太多，我想我一定不能这么平静地对待这个错觉。甩了甩脑袋，加快迈步速度。</p><p>再次来到破败医院前，我还是无法相信这家医院仍然在运营中。</p><p>这个小镇的人难道从来都不用看病吗？怀揣着这个疑问，我走进了医院。</p><p>里面的破败现象更甚：墙面剥落，桌椅年久失修，门口服务处的玻璃肮脏无比。透过玻璃上留下的洞，可以看到里面趴着一个一动不动一身破旧护士服的值班护士，正伏在桌上休息。</p><p>虽然看起来感觉像死了一样。</p><p>在我打量她的同时，她好像感应到了我的目光，身子从桌上直了起来，抬头看向我。我的天，这相貌真是不敢恭维，这个点见她和见了鬼没什么两样……不过打听消息要紧，我和护士交谈了起来，目的自然就是奥斯丁的信息。</p><p>不过不知道是哪里出了岔子，这个护士对我竟有防备，大声尖叫之下，医院里还在的人员也向医院大厅聚来。我试图再次取得信任，无果，只能冲去医院，找个阴暗处藏着。他们也并没有追出来，但我想了想这边没法再下手，干脆先去旅馆稍作休息，明天再说。</p><p>回到旅馆，大厅内已没有人了。老板趴在吧台内，正在呼呼大睡。我叫醒了老板，老板十分不耐烦的爬起来，听说我要住房，确认我要的房间之后，直接把钥匙扔给我，连定金都没要又趴下睡去。</p><p>看来他是真的困了。</p><p>我拿着钥匙走上二楼，在 7 号房前停下。打开房门，简单巡视一下，进门后关上房门又简单检查了一下，没问题。于是卸下行李，洗漱一番准备休息。休息之前，在门口窗边做了点小小的机关用作警戒，便躺上床进入梦乡。</p><p>熟睡中，感觉脖子上划过什么凉凉的东西，周围有沙沙作响的声音。试图醒来看看怎么回事，却发现没有办法醒来，只能在半睡半醒之间听着沙沙声感受着那抹凉意在身上流动，迷迷糊糊再次沉睡过去。</p><p>第二天早上，身体像是得到了允许，在双眼睁开醒来同时，弹簧般从床上弹射而起。警戒地环视四周，没有危险；检查睡前布置的机关，也发现没有被触动。但是，窗口有一缕黄沙，从窗沿上一直延伸到床边，床铺上也有四散的沙子。这时我意识到，昨天晚上好似做梦的感觉，不是我的错觉，一定有什么东西侵入了我的房间！</p><p>想到之前被扒过一个包，赶紧检查随身的东西，贴身的东西都在，包里的物品也一件不少。稍微松了口气，稍作收拾，离开了房间。</p><p>大厅内已经有些人了，稍显热闹。吧台上早有早起的酒鬼在大口喝酒，老板在吧台内来回处理客人的请求，两眼边有着厚厚的黑眼圈，眼袋浮肿，看起来休息得不是很好。</p><p>我上前打了招呼，老板眯着眼看了我半天，才想起来我就是半夜住宿的那位。我表达了昨天晚上住宿的手续还没有办，老板的脸上挤出了一丝笑容，一边给我办理手续，一边抱怨着有人半夜把他叫醒却问一些无关紧要的事情。我顺着话题和老板聊了起来，从牛肉食用喜好到镇上的娼妇姿色，中间稍稍试探了我关心的问题，不出意外的没有任何收获。眼看话题已尽，便要了一份早餐，一人端着来到一处无人角落。</p><p>小牛肉煎至微焦，切成几块撒上蒜汁，薄荷叶的加入带来了一丝清爽，让刚刚醒来的胃，也能有着和油腻肉食做斗争的欲望；一杯温热的牛奶，奶香浓厚四溢，好似等待出征男人归家的妇人一般，无限温柔地服侍鏖战之后的胃。</p><p>在我抓起刀叉向食物发起进攻时，楼梯处传来了好几串脚步声。抬头一望，发现恰好是昨天一同乘坐火车来到奥利托里的那些人——除了少了那个赌徒，背着画板的画师换了一身当地人的服装。那四人望了望，很快就发现角落中的我，一齐走了过来，在我这桌上坐下，旁若无人地开始交流！</p><p>我的心神就被交流的内容给吸引了进去，所有的内容全都围绕着昨天到达奥利托里之后，每个人的遭遇。</p><p>奥斯丁在加油站外抽烟时，一条疾如闪电的黄色小蛇袭击了他，当场倒地身亡。医生听到奥斯丁死前说着「不要」「局长」之类的字眼，从他的身上发现了两份文件，贵妇则是发现了他的警官证和资料室出入证。小女孩是躲在草丛中偷偷观察，却因不明原因发生异状，被医生发现并带给贵妇。</p><p>来到奥利托里后，他们先去了警局。在局长办公室，众人和肖恩局长先后依次见面交谈，画师在门外没进去。交流的过程中，袭击过奥斯丁的黄色小蛇再次袭击过来，却被肖恩局长当场两指夹成两截。小女孩只是被肖恩局长在耳边言语了几句，就恢复了正常。贵妇不小心摔倒，脸触碰到一丝血液，被灼出一个痕迹，和我的手指遭遇几乎一样。最后贵妇和医生接受了局长的委托，但是具体何事这两人并未说出。</p><p>出了警局，他们一起去了旅馆。在旅馆里发现了大量的黑袍人，画师以为是当地习俗，定制了六套黑袍，交流途中说起还顺便向我兜售，被我无言拒绝。赌徒不知发了什么疯和旅馆里的人豪赌，输个精光。小女孩伪造了证件奥斯丁身上获得的证件，看来她身份也很不一般。等几人都做了一些事情后，晚上的目标竟然都是去集市找巫医——也就是我在集市上碰到的那位老者。从他们口中得知，当地人说这个巫医非常厉害，手中药丸能治百病，在奥利托里几乎所有人都是靠着药丸治病，没有人会去医院。</p><p>夜晚集市上，医生竟然要做巫医的弟子，小女孩认了巫医做爷爷，医生、贵妇、小女孩三人都从巫医那得到了和我一样的药丸，医生和小女孩都得到了晚点时间来找巫医的约定。贵妇在离开集市后去了医院，而那画师，一直没找到巫医所在，和一家服饰店老板聊得火热之后便回了旅馆。小女孩制止了医生试图当众强暴少女的行为，小小身躯里爆发出的力量竟然可以当场制服一个成年男子。至于赌徒，没有人知道他的行踪了。</p><p>贵妇到达医院后，碰到了医院的值班护士，询问了很多奥斯丁的事情，得知奥斯丁经常资助医院，和医院的关系不错，医院里的人也都和他很熟。撇下护士自行行动，却发现病床上好多尸体，病房内恶臭熏天，贵妇逛了逛就离开医院回到旅馆。</p><p>医生单独去见巫医时，巫医向他要一个什么东西，猜测大概是证明或者入场券之类的物件，但医生并没有，巫医嘟囔着什么「祭品」之类的就不再理会医生。另一边，画师在回到旅馆后，又自行一个人前往警局，不但在会客厅内看到当时两眼呆滞的我，还在远处用望远镜监视警局门口时发现集市上的巫医，一个人向小镇外走去——一切就发生在我离开之后。</p><p>原来那种监视的感觉是因为这小子！</p><p>他从巫医的口中得知，奥利托里的监狱，就藏在加油站的下面。而在回到旅馆睡觉时，梦中看到了奥斯丁人身蛇尾站在风沙中的景象，听到了嘶吼着「告密者」的声音，小女孩出言表示附和，并断言奥斯丁没有死。</p><p>听着这一切，我的脑子逐渐成了一团浆糊，但是对于之前发生的「错觉」，我开始有些相信了。画师讲到我在警局的事情时，突然把枪口对准我，质问我当时在干嘛。我告诉他我也不是很确定发生了什么，脑海中的记忆却在此刻稍稍清晰了起来：肖恩局长坐在我的面前，身上突然冒出了大量胶状的绿色物质，覆盖在我全身，眼前瞬间一片漆黑。努力睁开双眼也只看得见偶尔有隐隐绿光蜿蜒闪过，耳中不断地重复着一个声音——</p><p>「泰克利——利！」</p><p>同时，我感觉身体深处什么东西被撕裂着，离开了我的身体。</p><p>下个瞬间，我清醒了过来。额头冒出密集的虚汗，苍白脸色，让面前的四人发现了我的异样，我的「没事」也没有能打消他们的疑虑，好在他们的交流没有因此而中断。</p><p>我已经深深地感觉到这个小镇危机四伏，需要加快点效率，想了想面前的四人，或许可以利用一下。</p><p>「咳——」感觉到他们的交流到达了尾声，我开始发声了。</p><p>我将昨天所有发生的事情，除了我的目的之外，毫无保留的说给面前四人听。谈及那枚金色纹章时，所有人明显眼前一亮，于是我拿过画师的画板试图画出，但杀人我会，画画我真是不会；我描述特征让他们试试看时，除了那个贵妇画的有那么点意思，其他人就一塌糊涂了，尤其是那个画板的主人，真不知道他为什么带着这块画板。</p><p>说完后，我感觉到了四人对我的态度明显友善了一些，想了想我的打算，我立马抢先开口：</p><p>「各位，很多事情的关键在奥斯丁身上，虽然奥斯丁已经被烧干净，但是他的家里有很大可能有我们想要的东西或与之相关的信息。我觉得当务之急，就是要找到奥斯丁的住处。」</p><p>众人纷纷表示同意。我见如此，便和他们约定了再次碰头的时间，一个人先行离开了。</p><p>目标，民居。</p><h1 id="六"><a href="#六" class="headerlink" title="六"></a>六</h1><p>贵妇在医院的病床位上看到了一个名字，罗格尔。这让我想到和我发生争执的那家人，铭牌上的名字，也是罗格尔！虽然感觉联想到了什么，但又抓不住，隐隐感觉需要来这边再调查一下，这便是我此行的目的。</p><p>远远就看到大门紧闭，不似昨天那样开着。确认了一下铭牌，并没有记错。那么一个在病床上死了的人，怎么活着出现在家门口和我起争执？并且那眼睛，一点也不似人的眼睛，就好像是，好像是那——蛇！没错，就是蛇！猛然回想起梦中人生蛇尾奥斯丁的描述，我感觉这中间一定有联系。</p><p>没有鲁莽破门，在墙角下听了一会，里面传来咀嚼的声音——有人在家。我不希望和他们正面冲突，那无疑会浪费很多时间。那么先和周围邻里打听打听，等待他们出门好了。</p><p>来到旁边一户人家，敲了敲门，结果开门的妇人让我吓了一大跳——这比医院的值班护士还要丑的多！丑得我无法找到任何一个词语来形容！感到早上刚吃的食物有种要从胃里翻滚而出的迹象，我凝神静气，将这种呕吐的欲望压了下去。感觉差不多了，才开始和妇人攀谈起来。</p><p>妇人十分热情，从交谈中我知道了罗格尔是从三天前开始不正常的，不仅多了个奇怪的同伴，还换身黑袍，几乎整日闭宅不出，窗户也全部封闭起来，好像特别害怕阳光似得。</p><p>交谈了一段时间，对妇人的相貌也逐渐免疫。我看着罗格尔家里的人似乎没有出门的打算，便以「多了解当地情况」为借口，表达了进屋详谈的意愿。妇人听了喜出望外，赶紧招呼我进来。</p><p>相对于罗格尔那一眼看尽的大单间，这件屋子是两层的复式结构，家里的装饰看起来也稍微名贵一些。妇人关上门后，去厨房准备咖啡。但我却发现，她往咖啡里加了些奇怪的东西，心里顿感不妙。左手拉了下大门，被锁住了，回过头，发现她已经端着咖啡过来，送到我的面前。</p><p>「来，请不要客气。」她的脸上挂着一如刚才的笑容，只是此刻在我眼里显得更恶心了。</p><p>情急之下，我推脱要个汤匙搅拌，在她转过身要取汤匙之际，闪电般出手敲晕了她。看她健壮的身躯倒下，我心里松了口气，从储物间找了个绳子把她绑住，以免再次陷入危机。做完这些，我爬上了二楼，从窗户监视着罗格尔家的动向。</p><p>可惜的是，里面的人一直都没有出门。</p><p>太阳已经微微偏西，我算了算时间，大概差不多了，于是放弃继续蹲守罗格尔家的想法，赶回旅馆等着和他们会和。</p><p>赶回旅馆，发现贵妇、小女孩和医生已经在这里等候着了。我表示了我没有任何收获，但三人并不在意。</p><p>贵妇、小女孩和画师找到了奥斯丁的住所，但却只有贵妇和小女孩两个人回来了。她们说奥斯丁家没找到什么东西，只发现了一口诡异的棺材，东西丢进去就会消失不见。另一边，医生说他去看了看加油站下的监狱，但也没有什么实质性的进展。</p><p>奥斯丁家竟然没有任何有用的信息？这有点出乎我的意料，我想怎么也能找到一点书信或笔记之类的东西，进而确定委托的内容。但没等我再多想，贵妇和小女孩突然表示她们事情办完，打算立刻离开奥利托里。我对奥斯丁的家还是不死心，向贵妇要了奥斯丁家的地址。贵妇将地址告诉了我，拉着小女孩启程离开奥利托里。</p><p>拿到地址后，我没管那医生，直接先行离开，来到奥斯丁的家中。</p><p>奥斯丁的家就在警局旁边，来到他家门前，发现大门已被打开。进屋内搜寻了一遍，的确没发现什么线索。一楼的抽屉、柜子，全是空的；二楼十分空旷，连张床都没，那口黑色棺材，漆黑诡异，看着它仿佛心神都被吸了进去。警惕地收回了目光，我离开了二楼回到了一楼。</p><p>该死，就差最后一步，我本来可以搞定的！不甘心又把奥斯丁家全部打砸了一遍，仍没有任何有价值的线索，只好扔下手中碎片，无奈离去。</p><h1 id="七"><a href="#七" class="headerlink" title="七"></a>七</h1><p>奥斯丁被蛇所袭击，说明他的敌人是蛇那一派；如果按照罗格尔家那里看到的黑袍蛇瞳人来推断，所有穿黑袍的人应该都是蛇瞳，当属蛇那一派。那么有很大可能，奥斯丁的目标，应该是那一派的其中某个人。奥斯丁尸体上获得一个刻有类似蛇图腾的纹章，应该是组织或教派里一个比较重要的信物，但又被当成敌人杀掉，结合之前他们所提到的「告密者」，答案很显而易见了——一定是肖恩局长让奥斯丁去做卧底，取得信任，通风报信，但是却被发现，所以奥斯丁才邀请一些人来帮他解决麻烦。</p><p>那么果然，突破口还是在局长身上。</p><p>从奥斯丁的屋子出来，走了几步我就到了警局门口。向在值的警员确认局长在办公室里，走到局长办公室前，敲门。</p><p>「请进。」肖恩局长的声音传出。</p><p>我推门而入，肖恩局长坐在办公椅上，旁边俯首站着一个警员——正是和我一同而来的医生，他怎么换上了一身警员的衣服？</p><p>肖恩局长似乎是看出，并未解释，而是开口问道：</p><p>「你来找我有什么事情？」</p><p>我把目光从医生身上收回，开口跟肖恩局长讲道之前调查以及收集到的信息。但随着我的叙述，肖恩局长神色越发不耐，终于忍不住打断了我。</p><p>「请问我委托你干什么？」</p><p>「呃，是处理那个什么伊——伊格吧，我已经调查到……」</p><p>「你知道伊格代表着什么吗？」肖恩局长又一次打断了我。</p><p>「不知道。」我摇了摇头。</p><p>「你真的不知道吗？」肖恩局长拍桌而起，反问了一句。</p><p>我刚打算开口，却忽然发现这「伊格」在我的脑海中气势膨胀开来，隐隐有一种要充爆我的脑袋的感觉；我的精神和意识在「伊格」面前逐渐变得弱小，不堪一击，被压制在脑海深处瑟瑟发抖，整个人目光呆滞站着不动。</p><p>「我给你两个选择。」肖恩局长的再次开口。我被这声音唤回，精神恍恍惚惚，感觉十分疲惫，失去了以往的判断力，只确信那个存在肯定是我没有办法所对抗的，我不可能处理的了。</p><p>「忘掉这一切，我可以送你安全离开。」肖恩局长继续开口，「或者留下，成为我的同胞。」</p><p>「这一切你自己决定。」</p><p>肖恩局长说完这一切，突然又想起什么，意味深长地补道：</p><p>「毕竟，从你这里我得到了无比的美味。」</p><p>说完便坐回了座位，旁边的医生一如既往的俯首站立。</p><p>我心神不宁地在肖恩局长和医生警员身上来回切换，想到这里的事情远远超出了我的想象和我的掌控范围，这个时候已经没有空去管那个该死的杀手尊严了。所以，我决定——</p><p>「我选择离开。」</p><p>话音刚落，我的身体就向后倒去，意识却仿佛变轻了一般，从身体里脱出，越飞越高。似曾相识的绿色力量从空中四面八方而来伸入我的意识之内，撕扯着我的记忆，仿佛要把该忘记的部分拿走。</p><p>但在记忆被撕扯走之前，却有着更多的记忆顺着绿色回到了我的意识中，在空中绽放开，一个接一个画面不停闪过。待画面全部闪完，绿色撕裂完成之际，我突然想起来了——</p><p>「这已经，是——是他妈的第七次了！」</p><h1 id="八"><a href="#八" class="headerlink" title="八"></a>八</h1><p>黄沙漫天飞舞，在缓缓前行的列车上留下属于它的专属记号。</p><p>这是一列单向行驶的火车，沿途会经停几个站台。</p><p>很快，火车抵达一处站台。最后一排角落里，一位身穿灰色大衣、戴着黑色礼帽的银发中年男人站起身来，缓步穿过过道，走下火车。透过车门，可以看到站台上的站牌写着几个大字。</p><p>「奥利托里」。</p><center>&lt; 全文完 &gt;</center><br><center>&lt; 奥利托里的蛇 - BAD END &gt;</center>]]></content>
    
    
    
    <tags>
      
      <tag>跑团</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>鸭血粉丝</title>
    <link href="undefinedfood-in-memory.html"/>
    <url>food-in-memory.html</url>
    
    <content type="html"><![CDATA[<p>清早到了公司，放好自行车，搓搓有点失去知觉手掌，快步下楼走向熟悉的目的地，点上一碗鸭血粉丝，坐下来等着叫号的那一刻。虽然时间上已是春季，但魔都这个气候除了偶尔证明一下，大部分时候都不太给面子。不过也正因如此，鸭血粉丝的乐趣，还可以再延续一些时日吧。</p><a id="more"></a><p>鸭血粉丝做好还有一段时间，手机看小说是一贯打发的方式。但打开才发现之前的小说刚好看完，新的小说又没有找。随便划拉着手机，脑子里也随便想着一些事情。</p><h1 id="十元晚餐"><a href="#十元晚餐" class="headerlink" title="十元晚餐"></a>十元晚餐</h1><p>入职 AcFun，现在想想还会觉得幸运。但刚入职那几个月，日子的确是过得不怎么样：工资低，消费高，转化到最现实的问题上就是租房和吃饭。好在租房虽有坎坷，结局还算美好，合租的室友还是同事，感叹缘分之奇妙。吃饭一事颇为克制，价格成为第一考虑要素，于是那段时间我便经常吃起房东在小区门口摆的小摊——快餐，十元五菜。</p><p>记忆中都是下班回家的时候吃。小区门口，简易的大支架上蒙着黄油布，下面放着若干小桌椅。棚子一头放着一辆黑咕隆咚的推车，上面有碗有罐，盛放着各种菜肴。不知道何处拉来的一根电线挂着一个灯泡，昏黄的灯光照亮棚下的人和物。我吃饭的地方，便在此处。</p><p>「老板，来一份十块钱的。」我开口向老板说道，手指点着我要的菜肴。老板拿起塑料快餐盒，先挖了一大勺米饭，随后将我点选的菜肴依次舀出盖上，递给我。我接过餐盒，另一只手递出钞票，眼睛在不大的空间里物色着我的位置，当老板把钱接过时就径直而去。</p><p>菜肴不是烧就是炖，加上天色已黑，灯光昏暗，食物在我的记忆中，没有什么色彩。掰开一双筷子，一口菜一口饭，有荤有素，味道不算太差，三五下就能吃完。</p><p>不过我的脑子中，大概想的是「这会功夫会有多少个稿子没审」这种事。推开盒筷，快步走回家，快餐摊点被我甩在身后。</p><h1 id="菜饭"><a href="#菜饭" class="headerlink" title="菜饭"></a>菜饭</h1><p>初来魔都工作，最大欣慰就是食物了。因为收入和前工作地缘故而饱受摧残的五脏庙，在魔都发出了欢愉的信号。地铁口流动早餐摊的粽子，小区对面的小厨面，晚上朋友一同胡吃海吹的烧烤排挡，至今仍留在我的记忆中。不过要论最深刻，还是无处不在的菜饭。</p><p>菜饭我妈妈也做过，大概因为是地域不同，有些差异。第一次在魔都吃菜饭时，被这个便宜好吃的食物刷新了认知。饭中加入青菜和咸肉一起煮，煮出的饭有味有料，直接吃都可以。再配上一种卤味，一碗大骨炖煮的清汤。主食、菜肴，重口味、清淡，蔬菜、肉类，在这三小碗中体现的淋漓尽致。米饭和汤不够还可以再加，平易近人又包罗万象，在菜饭店里可以看到各种客人。</p><p>现在的我，也常常是其中的一员。</p><h1 id="猪脚饭"><a href="#猪脚饭" class="headerlink" title="猪脚饭"></a>猪脚饭</h1><p>因为一些原因，我再次来到了武汉。关南园路的万科，是我在这个地方新的住所。拼搏了浑噩了一段日子，吃食又鲜有满意，夏天雨季那连续阴沉的天，一如我的心情。</p><p>隔壁小区理想城，楼下某天开了一家猪脚饭。店面很小，里面放了五六张桌子。进门左侧为操作区，上面盛放了各种卤食，案板旁边的老板娘在辛劳工作。</p><p>点了一份猪脚饭，看着老板娘盛好饭，案头上的猪脚几刀剁下，摆在饭上，拿起汤勺浇点卤汁，一份猪脚饭就此完成。</p><p>淋上卤汁的猪脚显得晶莹，一口咬下，没有骨头，猪脚软烂，多肥而不腻。卤汁将猪脚中厚实的味道引出，让你沉迷其中，忽略盘中粗犷的卖相。用勺子拌一拌，将卤汁和米饭充分搅拌，十分下饭，吃几口再带上猪脚一起，仿佛两份快乐叠加在一起。</p><p>这里经常会有刚从一线下来的工人兄弟，三五成群带上一瓶酒，来此点上几份，众人饮酒分食，说着白天的趣事或抱怨，偶尔和老板娘搭上几句，气氛融洽。</p><p>我去的多了，和老板娘也熟稔起来，偶尔也会和老板娘说上几句，碰到工人兄弟搭话，顺势也能聊起来，现在想想也挺神奇。</p><p>大概是因为大家本质上没有区别吧。</p><h1 id="鸭血粉丝"><a href="#鸭血粉丝" class="headerlink" title="鸭血粉丝"></a>鸭血粉丝</h1><p>「283 号，鸭血粉丝好了！」</p><p>四散的思绪被叫号声拉回，我起身走到取餐处，看到那一碗熟悉的鸭血粉丝，婉拒了香菜想要亲近的好意，自行加了葱花和榨菜碎，顺手拿回一副勺筷，准备工作就绪。</p><p>鸭血粉丝起源究竟是南京还是镇江，尚不好定论，但是发展流传至今，材料大抵都是相同的：鸭血（鹅血），鸭肫、鸭肠、鸭肝等鸭杂，豆泡（又或叫油豆腐），粉丝以及其他自由发挥想象的材料。面前这一碗，拨动搅开葱花榨菜碎，漂浮在乳白汤面上的豆泡，半入汤内的鸭血，没入汤中的鸭肫、鸭肠以及粉丝，在汤中微微起伏。</p><p>不过，为什么没有鸭肝？这也正是我喜爱这家鸭血粉丝的原因之一，打遍家禽内脏无敌手的我，唯独对沙涩口感的肝类出不了招。这家没有鸭肝的鸭血粉丝，着实是适合我了——正如肉夹馍，比起油盐不进的正宗脆馍，我更喜欢软嫩吸汁的不正宗软馍，与馅更接近的口感，入口和谐统一。所以吃这一事，正不正宗世人去争，好吃与否得自己满意才成。</p><p>这碗世界中，鸭血和豆泡是我不太待见的角色。鸭血在食物名中占了半壁江山，且口感滑嫩，却不易入味，离开汤汁光华尽失；豆泡易吸汤水，但在下锅沸煮时吸了个饱，汤汁无余地进入，只得在外陪伴，否则更加索然无味。所以刚开始，避开这两位是个不错的选择。相对的，夹着鸭肫、鸭肠，挑起些许粉丝送入嘴中，香嫩的鸭杂和爽滑的粉丝在嘴中咬断。落齿干脆的触感，咬断的食物在些许汤汁配合下释放出的醇厚味道，无疑都在告诉我这才是正确的打开方式。食物快速被咬碎，还未待吞咽下去，手中的筷子早已伸入碗中，急急展开下一周目工作。来来回回几次，碗中的粉丝几乎不见踪影。</p><p>筷子的使命已经完成，后面的任务勺子可以独自担当。拿起勺子，挖着之前没动的鸭血和豆泡，带满汤汁送入嘴中。之前吃粉丝而略显干燥的口腔被温润汤汁满满填入，鸭血、豆泡迎来了食用的最好时机。偶尔舀到鸭杂，惊喜之感就像在一群鹅卵石中找到中意的雨花石，波动的心情给味觉带来层次之感。</p><p>很快，碗里就只剩汤了。鸭血粉丝，在很多地方叫鸭血粉丝汤，重点自然在这个「汤」字上。左手端起汤碗，送入嘴边；右手握住勺子，在喝汤时伸入碗中划拉。汤中那些漏网之鱼随着汤水的流动涌入嘴里，且吃且喝，亦饮亦嚼。之前看似一碗鸭血粉丝吃完，实则这才是真正开始的时刻。鸭血粉丝的每一个组成部分，这个瞬间不分先后彼此在口中融合。</p><p>不知为何，每每在进行这最后的时刻，我的脑中总会响起日本剧集《孤独的美食家》中五郎先生最后清扫所有食物所配播的 <a href="https://music.163.com/#/song?id=31721262" target="_blank" rel="noopener">BGM</a>，一种愈战愈勇的气势将汤水一扫而空。除了满足，不想用其他词语来描述我现在的感受了。</p><p>迈出店门，头顶已有阳光洒落，驱赶严寒。但我的双手，已经温暖。</p><p>这碗鸭血粉丝，还是好吃。</p>]]></content>
    
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>山重水复疑无路，感兴趣一天是一天</title>
    <link href="undefinedyorosiku.html"/>
    <url>yorosiku.html</url>
    
    <content type="html"><![CDATA[<p>拿域名，建 Blog，然后吹（Pen）上一番。这个念头在我脑子里发芽并被灌溉了接近半年，因为各种前置工作没做，而未能得以实施。心心念念的域名最终未被我钻到空子，拿下了另一个域名准备起上 WordPress，又发现当时买的机器只看了线路和带宽，小的可怜的 10 GB 存储只剩 4 GB 不到，这数据库起不起的来都有点难说啊。</p><a id="more"></a><p>既然觉得空间不够，那么 Hexo 可能就是我目前唯一的选择，本地一阵倒腾后轮到服务器，发现也是年久失修垂垂老矣，遂备份一下炸了重来，看着崭新的 8 GB 多剩余空间，又看着折腾来了劲的 Hexo，罢了罢了，还是从了你了。</p><p>可能还是会像上次一样写不了什么——甚至什么都没写就结束了它的一生，当然这篇发出时这种可能也就不复存在。但是管那么多干什么呢，有一天是一天。</p><p>你好，初次见面！</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>